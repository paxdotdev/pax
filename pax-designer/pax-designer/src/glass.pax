<Group @mousedown=handle_mousedown @mousemove=handle_mousemove @mouseup=handle_mouseup>
    for pt in self.control_points {
        <Rectangle class=control_point x={(pt.x)px} y={(pt.y)px} />
    }

    for segment in self.selection_bounding_segments {
        <Path class=bounding_segment />
    }
    <Rectangle id=backing_plate />
</Group>

<Example id=project/>

@settings {
    #backing_plate {
        //this Rectangle is the event-intercepting, invisible baselayer of glass â€” it must
        //exist in order to intercept events from the rendering layer underneath
        //(Note an alternative could be a flag passed to Group which toggles its `is_invisible_to_raycasting`)
        fill: {Fill::Solid(Color::rgba(0,0,0,0))}
    }

    #project {
        x: 250px,
        y: 65px,
        width: {100% - 700px},
        height: {100% - 65px},
    }

    .control_point {
        stroke: {
            color: {
                Color::rgb(0, 0, 1)
            }
            width: 1px
        }
        fill: {
            Fill::Solid(Color::rgb(1,1,1))
        }
        width: 7px
        height: 7px
        anchor_x: 50%
        anchor_y: 50%
    }

    .bounding_segment {
        segments: {[
            PathSegment::line(
                LineSegmentData::new(
                    Point::new((segment.x0)px, (segment.y0)px),
                    Point::new((segment.x1)px, (segment.y1)px)
                )
            )
        ]},
        stroke: {
            color: {
                Color::rgb(0, 0, 1)
            }
            width: 1px
        },
    }
}