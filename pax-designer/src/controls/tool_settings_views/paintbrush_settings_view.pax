<ColorPicker width=100px height=100px y=20% color=bind:fill_color/>
<ColorPicker width=100px height=100px y=40% color=bind:stroke_color/>
<Textbox y=60% class=input text=bind:self.brush_radius_text/>
<Textbox y=80% class=input text=bind:self.stroke_width_text/>

@settings {
    @mount: on_mount
    #text {
        selectable: false,
        style: {
            font: {Font::Web(
                "ff-real-headline-pro",
                "https://use.typekit.net/ivu7epf.css",
                FontStyle::Normal,
                FontWeight::Bold,
            )},
            font_size: 10px,
            fill: {rgba(255, 0.3*255, 0.3*255, 255)},
            align_vertical: TextAlignVertical::Top,
            align_horizontal: TextAlignHorizontal::Left,
            align_multiline: TextAlignHorizontal::Left
        }
    }

    .input {
        width: 96.66%,
        height: 30px,
        background: rgb(12.5%, 12.5%, 12.5%),
        stroke: {
            color: rgb(48, 56, 62),
            width: 1px,
        },
        border_radius: 5,
        style: {
            font: {Font::Web(
                "ff-real-headline-pro",
                "https://use.typekit.net/ivu7epf.css",
                FontStyle::Normal,
                FontWeight::ExtraLight,
            )},
            font_size: 13px,
            fill: WHITE,
        }
    }


    .property_label {
        height: 20px,
        y: 50%,
        selectable: false,
        anchor_y: 50%,
        style: {
            font: {Font::Web(
                "ff-real-headline-pro",
                "https://use.typekit.net/ivu7epf.css",
                FontStyle::Normal,
                FontWeight::Light
            )},
            font_size: 14px,
            fill: rgba(255, 255, 255, 67%),
            align_vertical: TextAlignVertical::Center,
            align_horizontal: TextAlignHorizontal::Right,
        }
    }

    .property_label_larger {
        height: 26px,
        y: 50%,
        anchor_y: 50%,
        style: {
            font: {Font::Web(
                "ff-real-headline-pro",
                "https://use.typekit.net/ivu7epf.css",
                FontStyle::Normal,
                FontWeight::Thin
            )},
            font_size: 20px,
            fill: rgba(255, 255, 255, 67%),
            align_vertical: TextAlignVertical::Center,
            align_horizontal: TextAlignHorizontal::Right,
        }
    }

    // col_k = (k * 100/8) + 1.67%
    .col_1 {
        x: 1.67%,  // 0 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_2 {
        x: 14.17%,  // 1 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_3 {
        x: 26.67%,  // 2 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_4 {
        x: 39.17%,  // 3 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_5 {
        x: 51.67%,  // 4 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_6 {
        x: 64.17%,  // 5 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_7 {
        x: 76.67%,  // 6 * (100/8) + 1.67%
        anchor_x: 0%,
    }
    .col_8 {
        x: 89.17%,  // 7 * (100/8) + 1.67%
        anchor_x: 0%,
    }

    // span_k = ((k * 100/8) - 3.33)%
    .span_1 {
        width: 9.17%,  // (1 * 100/8) - 3.33
    }
    .span_2 {
        width: 21.67%,  // (2 * 100/8) - 3.33
    }
    .span_3 {
        width: 34.17%,  // (3 * 100/8) - 3.33
    }
    .span_4 {
        width: 46.67%,  // (4 * 100/8) - 3.33
    }
    .span_5 {
        width: 59.17%,  // (5 * 100/8) - 3.33
    }
    .span_6 {
        width: 71.67%,  // (6 * 100/8) - 3.33
    }
    .span_7 {
        width: 84.17%,  // (7 * 100/8) - 3.33
    }
    .span_8 {
        width: 96.67%,  // (8 * 100/8) - 3.33
    }
}
