if !$mobile {
    //Hide the toggle so we can show "play-mode" designer to mobile and simply hide the UI for showing the designer
    <ProjectModeToggle x=100% width=90px height=55px/>
}

if !self.is_in_play_mode {
    <DesignerContextMenu/>

    <Frame y=0 height={100% - (console_height)px}>
        <MessageLogDisplay/>
        if show_publish_button {
            <ProjectPublishButton/>
        }
        <Controls/>
        <Group id=designer_glass>
            // hide glass before project is loaded, could potentially show loading bar at some point
            //if !self.manifest_loaded_from_server {
            //    <Text id=loading text="Loading..." width=100% height=100%/>
            //    <Rectangle fill=WHITE/>
            //}
            //Optionally turned on on right click
            <Glass/>
            <Group transform={self.glass_to_world_transform}>
                // Stage has a fixed size, regardless of window size
                <Group width={(self.stage.stage_width)px} height={(self.stage.stage_height)px} id=stage>
                    <Rectangle height={self.stage_outline_width} y=0% anchor_y=100% fill=rgba(255,255,255,50%) width={100% + (self.stage_outline_width)px}/>
                    <Rectangle height={self.stage_outline_width} y=100% anchor_y=0% x={-self.stage_outline_width} fill=rgba(255,255,255,50%) width={100% + (self.stage_outline_width)px}/>
                    <Rectangle width={self.stage_outline_width} x=0% anchor_x=100% y={-self.stage_outline_width} fill=rgba(255,255,255,50%) height={100% + (self.stage_outline_width)px}/>
                    <Rectangle width={self.stage_outline_width} x=100% anchor_x=0% fill=rgba(255,255,255,50%) height={100% + (self.stage_outline_width)px}/>
                    <Group id=project_container _suspended=true>
                        <InlineFrame />
                    </Group>
                    <Rectangle fill={self.stage.color}/>
                    // <Text id=annot text={self.stage.stage_height} x=50% y={100% + 30px}/>
                </Group>
            </Group>
            <Rectangle id=global_background/>
        </Group>
    </Frame>
    <Group y=100% height={(console_height)px}>
        <Group @click=self.toggle_console x=0 y=0 height=55px>
            <Stacker direction=StackerDirection::Horizontal width=200px x=0 sizes=[Some(7px), Some(55px), None] >
                <Group />
                <Image y=50% x={100% - 3px} height=36px source=ImageSource::Url("assets/icons/icon-console.png") / >
                <Text id=console_label height=100% text="Console" />
            </Stacker>
            <Rectangle fill=BLACK />
        </Group>
        <Console y=100% />
    </Group>


}
if self.is_in_play_mode {
    <Group id=project_container _suspended=false>
        <InlineFrame />
    </Group>
}

// To include primitives in manifest
if 0 == 1 {
    <Checkbox/>
    <Textbox/>
    <Slider/>
    <Button/>
    <Dropdown/>
    <RadioSet/>
    <Scroller/>
    <Link/>
    <Carousel/>
}

@settings {
    @mouse_move: handle_mouse_move
    @mouse_up: handle_mouse_up
    @mount: on_mount,
    @tick: tick,
    @key_down: handle_key_down,
    @key_up: handle_key_up,
    @focused: focused,

    #global_background {
        fill: {rgb(96.0,96.0,96.0)}
    }

    #console_label {
        style: {
            fill: WHITE,
            font: {Font::Web(
                "ff-real-headline-pro",
                "https://use.typekit.net/ivu7epf.css",
                FontStyle::Normal,
                FontWeight::ExtraLight,
            )},
            font_size: 16px,
            align_horizontal: TextAlignHorizontal::Left,
            align_vertical:TextAlignVertical::Center
        }
    }

    #designer_glass {
        // WARNING: these values are separately used to get glass transform
        // in DerivedAppState init, change there too if you change this
        x: 240px,
        y: 60px,
        width: {100% - 480px},
        height: {100% - 60px},
    }

    #loading {
        style: {
            font: {Font::Web(
                "Inconsolata, monospace",
                "https://fonts.googleapis.com/css2?family=Inconsolata:wght@200..900&display=swap",
                FontStyle::Normal,
                FontWeight::Normal)}
            font_size: 30px
            fill: rgb(12.5%, 12.5%, 12.5%)
            align_vertical: TextAlignVertical::Center
            align_horizontal: TextAlignHorizontal::Center
            align_multiline: TextAlignHorizontal::Center
        }
    }

    #annot {
        style: {
            font: {Font::Web(
                "Inconsolata, monospace",
                "https://fonts.googleapis.com/css2?family=Inconsolata:wght@200..900&display=swap",
                FontStyle::Normal,
                FontWeight::Normal)}
            font_size: 20px
            fill: WHITE
            align_vertical: TextAlignVertical::Center
            align_horizontal: TextAlignHorizontal::Center
            align_multiline: TextAlignHorizontal::Center
        }
    }
}
