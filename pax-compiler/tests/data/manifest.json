{
  "components": {
    "pax_std::types::text::WebFont": {
      "type_id": "pax_std::types::text::WebFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOWebFont",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "WebFont",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::LocalFont": {
      "type_id": "pax_std::types::text::LocalFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOLocalFont",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "LocalFont",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Image": {
      "type_id": "pax_std::primitives::Image",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOImage",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Image",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::image::ImageInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Rectangle": {
      "type_id": "pax_std::primitives::Rectangle",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCORectangle",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Rectangle",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::rectangle::RectangleInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Text": {
      "type_id": "pax_std::primitives::Text",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOText",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Text",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::text::TextInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::RadialGradient": {
      "type_id": "pax_std::types::RadialGradient",
      "type_id_escaped": "pax_stdCOCOtypesCOCORadialGradient",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "RadialGradient",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::Fill": {
      "type_id": "pax_std::types::Fill",
      "type_id_escaped": "pax_stdCOCOtypesCOCOFill",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "Fill",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::RectangleCornerRadii": {
      "type_id": "pax_std::types::RectangleCornerRadii",
      "type_id_escaped": "pax_stdCOCOtypesCOCORectangleCornerRadii",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "RectangleCornerRadii",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::stacker::Stacker": {
      "type_id": "pax_std::stacker::Stacker",
      "type_id_escaped": "pax_stdCOCOstackerCOCOStacker",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": false,
      "pascal_identifier": "Stacker",
      "module_path": "pax_std::stacker",
      "primitive_instance_import_path": null,
      "template": [
        {
          "id": 0,
          "child_ids": [
            1
          ],
          "type_id": "IMPLICIT_ROOT",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "<UNREACHABLE>",
          "raw_comment_string": null
        },
        {
          "id": 1,
          "child_ids": [
            2
          ],
          "type_id": "REPEAT",
          "control_flow_settings": {
            "condition_expression_paxel": null,
            "condition_expression_vtable_id": null,
            "slot_index_expression_paxel": null,
            "slot_index_expression_vtable_id": null,
            "repeat_predicate_definition": {
              "ElemIdIndexId": [
                {
                  "token_value": "cell_spec",
                  "raw_value": "cell_spec",
                  "token_type": "ForPredicate",
                  "source_line": "                        for(cell_spec, i) in self._cell_specs",
                  "token_location": {
                    "start_line_col": [
                      1,
                      28
                    ],
                    "end_line_col": [
                      1,
                      37
                    ]
                  }
                },
                {
                  "token_value": "i",
                  "raw_value": "i",
                  "token_type": "ForPredicate",
                  "source_line": "                        for(cell_spec, i) in self._cell_specs",
                  "token_location": {
                    "start_line_col": [
                      1,
                      39
                    ],
                    "end_line_col": [
                      1,
                      40
                    ]
                  }
                }
              ]
            },
            "repeat_source_definition": {
              "range_expression_paxel": null,
              "vtable_id": null,
              "symbolic_binding": {
                "token_value": "_cell_specs",
                "raw_value": "self._cell_specs",
                "token_type": "ForSource",
                "source_line": "                        for(cell_spec, i) in self._cell_specs",
                "token_location": {
                  "start_line_col": [
                    1,
                    45
                  ],
                  "end_line_col": [
                    1,
                    61
                  ]
                }
              }
            }
          },
          "settings": null,
          "pascal_identifier": "Repeat",
          "raw_comment_string": null
        },
        {
          "id": 2,
          "child_ids": [
            3
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "transform",
                  "raw_value": "transform",
                  "token_type": "SettingKey",
                  "source_line": "    < Frame transform =",
                  "token_location": {
                    "start_line_col": [
                      3,
                      12
                    ],
                    "end_line_col": [
                      3,
                      21
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Transform2D :: translate((cell_spec.x_px) px, (cell_spec.y_px) px) ",
                      "raw_value": "{ Transform2D :: translate((cell_spec.x_px) px, (cell_spec.y_px) px) }",
                      "token_type": "Expression",
                      "source_line": "    { Transform2D :: translate((cell_spec.x_px) px, (cell_spec.y_px) px) }",
                      "token_location": {
                        "start_line_col": [
                          4,
                          6
                        ],
                        "end_line_col": [
                          4,
                          73
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "    width = { (cell_spec.width_px) px } height = { (cell_spec.height_px) px }",
                  "token_location": {
                    "start_line_col": [
                      5,
                      4
                    ],
                    "end_line_col": [
                      5,
                      9
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "(cell_spec.width_px) px ",
                      "raw_value": "{ (cell_spec.width_px) px }",
                      "token_type": "Expression",
                      "source_line": "    width = { (cell_spec.width_px) px } height = { (cell_spec.height_px) px }",
                      "token_location": {
                        "start_line_col": [
                          5,
                          14
                        ],
                        "end_line_col": [
                          5,
                          38
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "    width = { (cell_spec.width_px) px } height = { (cell_spec.height_px) px }",
                  "token_location": {
                    "start_line_col": [
                      5,
                      40
                    ],
                    "end_line_col": [
                      5,
                      46
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "(cell_spec.height_px) px ",
                      "raw_value": "{ (cell_spec.height_px) px }",
                      "token_type": "Expression",
                      "source_line": "    width = { (cell_spec.width_px) px } height = { (cell_spec.height_px) px }",
                      "token_location": {
                        "start_line_col": [
                          5,
                          51
                        ],
                        "end_line_col": [
                          5,
                          76
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 3,
          "child_ids": [],
          "type_id": "SLOT",
          "control_flow_settings": {
            "condition_expression_paxel": null,
            "condition_expression_vtable_id": null,
            "slot_index_expression_paxel": {
              "token_value": "(i) ",
              "raw_value": "(i) ",
              "token_type": "SlotExpression",
              "source_line": "    > slot(i) < / Frame >",
              "token_location": {
                "start_line_col": [
                  6,
                  10
                ],
                "end_line_col": [
                  6,
                  14
                ]
              }
            },
            "slot_index_expression_vtable_id": null,
            "repeat_predicate_definition": null,
            "repeat_source_definition": null
          },
          "settings": null,
          "pascal_identifier": "Slot",
          "raw_comment_string": null
        }
      ],
      "settings": [],
      "handlers": [
        {
          "Handler": [
            {
              "token_value": "will_render",
              "raw_value": "will_render",
              "token_type": "EventId",
              "source_line": "} @ handlers { will_render : handle_will_render }",
              "token_location": {
                "start_line_col": [
                  7,
                  15
                ],
                "end_line_col": [
                  7,
                  26
                ]
              }
            },
            [
              {
                "token_value": "handle_will_render",
                "raw_value": "handle_will_render",
                "token_type": "Handler",
                "source_line": "} @ handlers { will_render : handle_will_render }",
                "token_location": {
                  "start_line_col": [
                    7,
                    29
                  ],
                  "end_line_col": [
                    7,
                    47
                  ]
                }
              }
            ]
          ]
        }
      ]
    },
    "pax_std::types::GradientStop": {
      "type_id": "pax_std::types::GradientStop",
      "type_id_escaped": "pax_stdCOCOtypesCOCOGradientStop",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "GradientStop",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::Stroke": {
      "type_id": "pax_std::types::Stroke",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStroke",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "Stroke",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::TextAlignVertical": {
      "type_id": "pax_std::types::text::TextAlignVertical",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextAlignVertical",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "TextAlignVertical",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::FontWeight": {
      "type_id": "pax_std::types::text::FontWeight",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFontWeight",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "FontWeight",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::FontStyle": {
      "type_id": "pax_std::types::text::FontStyle",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFontStyle",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "FontStyle",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Scroller": {
      "type_id": "pax_std::primitives::Scroller",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOScroller",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Scroller",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::scroller::ScrollerInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::SystemFont": {
      "type_id": "pax_std::types::text::SystemFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOSystemFont",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "SystemFont",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::TextAlignHorizontal": {
      "type_id": "pax_std::types::text::TextAlignHorizontal",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextAlignHorizontal",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "TextAlignHorizontal",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Group": {
      "type_id": "pax_std::primitives::Group",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOGroup",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Group",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::group::GroupInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::StackerDirection": {
      "type_id": "pax_std::types::StackerDirection",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStackerDirection",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "StackerDirection",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "crate::WebsiteDesktop": {
      "type_id": "crate::WebsiteDesktop",
      "type_id_escaped": "crateCOCOWebsiteDesktop",
      "is_main_component": true,
      "is_primitive": false,
      "is_struct_only_component": false,
      "pascal_identifier": "WebsiteDesktop",
      "module_path": "crate",
      "primitive_instance_import_path": null,
      "template": [
        {
          "id": 0,
          "child_ids": [
            1
          ],
          "type_id": "IMPLICIT_ROOT",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "<UNREACHABLE>",
          "raw_comment_string": null
        },
        {
          "id": 1,
          "child_ids": [
            2,
            3,
            11,
            12
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "                         <Frame width=100% height=100%>",
                  "token_location": {
                    "start_line_col": [
                      1,
                      32
                    ],
                    "end_line_col": [
                      1,
                      37
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "                         <Frame width=100% height=100%>",
                    "token_location": {
                      "start_line_col": [
                        1,
                        38
                      ],
                      "end_line_col": [
                        1,
                        42
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "                         <Frame width=100% height=100%>",
                  "token_location": {
                    "start_line_col": [
                      1,
                      43
                    ],
                    "end_line_col": [
                      1,
                      49
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "                         <Frame width=100% height=100%>",
                    "token_location": {
                      "start_line_col": [
                        1,
                        50
                      ],
                      "end_line_col": [
                        1,
                        54
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 2,
          "child_ids": [],
          "type_id": "COMMENT",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Comment",
          "raw_comment_string": "// Nav fixed overlay\n"
        },
        {
          "id": 3,
          "child_ids": [
            4,
            10
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "x",
                  "raw_value": "x",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      11
                    ],
                    "end_line_col": [
                      3,
                      12
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(50.into())",
                    "raw_value": "50%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        13
                      ],
                      "end_line_col": [
                        3,
                        16
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "y",
                  "raw_value": "y",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      17
                    ],
                    "end_line_col": [
                      3,
                      18
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(90.into())",
                    "raw_value": "90px",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        19
                      ],
                      "end_line_col": [
                        3,
                        23
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      24
                    ],
                    "end_line_col": [
                      3,
                      29
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(80.into())",
                    "raw_value": "80%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        30
                      ],
                      "end_line_col": [
                        3,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      34
                    ],
                    "end_line_col": [
                      3,
                      40
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(75.into())",
                    "raw_value": "75px",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        41
                      ],
                      "end_line_col": [
                        3,
                        45
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "anchor_x",
                  "raw_value": "anchor_x",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      46
                    ],
                    "end_line_col": [
                      3,
                      54
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(50.into())",
                    "raw_value": "50%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        55
                      ],
                      "end_line_col": [
                        3,
                        58
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "anchor_y",
                  "raw_value": "anchor_y",
                  "token_type": "SettingKey",
                  "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                  "token_location": {
                    "start_line_col": [
                      3,
                      59
                    ],
                    "end_line_col": [
                      3,
                      67
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(50.into())",
                    "raw_value": "50%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Frame x=50% y=90px width=80% height=75px anchor_x=50% anchor_y=50% >",
                    "token_location": {
                      "start_line_col": [
                        3,
                        68
                      ],
                      "end_line_col": [
                        3,
                        71
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 4,
          "child_ids": [
            5,
            6,
            7,
            8,
            9
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                  "token_location": {
                    "start_line_col": [
                      4,
                      18
                    ],
                    "end_line_col": [
                      4,
                      23
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(5 )",
                    "raw_value": "5 ",
                    "token_type": "LiteralValue",
                    "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                    "token_location": {
                      "start_line_col": [
                        4,
                        24
                      ],
                      "end_line_col": [
                        4,
                        26
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                  "token_location": {
                    "start_line_col": [
                      4,
                      26
                    ],
                    "end_line_col": [
                      4,
                      32
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(75.into())",
                    "raw_value": "75px",
                    "token_type": "LiteralValue",
                    "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                    "token_location": {
                      "start_line_col": [
                        4,
                        33
                      ],
                      "end_line_col": [
                        4,
                        37
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                  "token_location": {
                    "start_line_col": [
                      4,
                      38
                    ],
                    "end_line_col": [
                      4,
                      47
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Horizontal ",
                    "raw_value": "StackerDirection::Horizontal ",
                    "token_type": "LiteralValue",
                    "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                    "token_location": {
                      "start_line_col": [
                        4,
                        48
                      ],
                      "end_line_col": [
                        4,
                        77
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                  "token_location": {
                    "start_line_col": [
                      4,
                      77
                    ],
                    "end_line_col": [
                      4,
                      83
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(8.into())",
                    "raw_value": "8px",
                    "token_type": "LiteralValue",
                    "source_line": "         <Stacker cells=5 height=75px direction=StackerDirection::Horizontal gutter=8px>",
                    "token_location": {
                      "start_line_col": [
                        4,
                        84
                      ],
                      "end_line_col": [
                        4,
                        87
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 5,
          "child_ids": [],
          "type_id": "pax_std::primitives::Image",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "path",
                  "raw_value": "path",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      19
                    ],
                    "end_line_col": [
                      5,
                      23
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"assets/images/pax-logo-light.png\")",
                    "raw_value": "\"assets/images/pax-logo-light.png\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        24
                      ],
                      "end_line_col": [
                        5,
                        58
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      59
                    ],
                    "end_line_col": [
                      5,
                      64
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(125.into())",
                    "raw_value": "125px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        65
                      ],
                      "end_line_col": [
                        5,
                        70
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      71
                    ],
                    "end_line_col": [
                      5,
                      77
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(42.into())",
                    "raw_value": "42px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        78
                      ],
                      "end_line_col": [
                        5,
                        82
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "y",
                  "raw_value": "y",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      83
                    ],
                    "end_line_col": [
                      5,
                      84
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(50.into())",
                    "raw_value": "50%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        85
                      ],
                      "end_line_col": [
                        5,
                        88
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "anchor_y",
                  "raw_value": "anchor_y",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      89
                    ],
                    "end_line_col": [
                      5,
                      97
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(50.into())",
                    "raw_value": "50%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        98
                      ],
                      "end_line_col": [
                        5,
                        101
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "x",
                  "raw_value": "x",
                  "token_type": "SettingKey",
                  "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                  "token_location": {
                    "start_line_col": [
                      5,
                      102
                    ],
                    "end_line_col": [
                      5,
                      103
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(20.into())",
                    "raw_value": "20px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Image path=\"assets/images/pax-logo-light.png\" width=125px height=42px y=50% anchor_y=50% x=20px />",
                    "token_location": {
                      "start_line_col": [
                        5,
                        104
                      ],
                      "end_line_col": [
                        5,
                        108
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Image",
          "raw_comment_string": null
        },
        {
          "id": 6,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      6,
                      18
                    ],
                    "end_line_col": [
                      6,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\")",
                    "raw_value": "\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\" class=link />",
                    "token_location": {
                      "start_line_col": [
                        6,
                        23
                      ],
                      "end_line_col": [
                        6,
                        79
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      6,
                      80
                    ],
                    "end_line_col": [
                      6,
                      85
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "link",
                      "raw_value": "link",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"<a href='https://docs.pax.rs' target='_blank'>Docs</a>\" class=link />",
                      "token_location": {
                        "start_line_col": [
                          6,
                          86
                        ],
                        "end_line_col": [
                          6,
                          90
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 7,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      7,
                      18
                    ],
                    "end_line_col": [
                      7,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\")",
                    "raw_value": "\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\" class=link />",
                    "token_location": {
                      "start_line_col": [
                        7,
                        23
                      ],
                      "end_line_col": [
                        7,
                        97
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      7,
                      98
                    ],
                    "end_line_col": [
                      7,
                      103
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "link",
                      "raw_value": "link",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"<a href='https://www.github.com/pax-lang/pax' target='_blank'>Github</a>\" class=link />",
                      "token_location": {
                        "start_line_col": [
                          7,
                          104
                        ],
                        "end_line_col": [
                          7,
                          108
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 8,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      8,
                      18
                    ],
                    "end_line_col": [
                      8,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\")",
                    "raw_value": "\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\" class=link />",
                    "token_location": {
                      "start_line_col": [
                        8,
                        23
                      ],
                      "end_line_col": [
                        8,
                        92
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      8,
                      93
                    ],
                    "end_line_col": [
                      8,
                      98
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "link",
                      "raw_value": "link",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"<a href='https://discord.gg/Eq8KWAUc6b' target='_blank'>Discord</a>\" class=link />",
                      "token_location": {
                        "start_line_col": [
                          8,
                          99
                        ],
                        "end_line_col": [
                          8,
                          103
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 9,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      9,
                      18
                    ],
                    "end_line_col": [
                      9,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\")",
                    "raw_value": "\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\" class=link />",
                    "token_location": {
                      "start_line_col": [
                        9,
                        23
                      ],
                      "end_line_col": [
                        9,
                        85
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\" class=link />",
                  "token_location": {
                    "start_line_col": [
                      9,
                      86
                    ],
                    "end_line_col": [
                      9,
                      91
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "link",
                      "raw_value": "link",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"<a href='https://developing.pax.rs' target='_blank'>Blog</a>\" class=link />",
                      "token_location": {
                        "start_line_col": [
                          9,
                          92
                        ],
                        "end_line_col": [
                          9,
                          96
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 10,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "            fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      12,
                      12
                    ],
                    "end_line_col": [
                      12,
                      16
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                (0%, 50%),\n                (100%, 50%),\n                [GradientStop::get(Color::rgba(0.0,0.0,0.0,1.0), 0%), GradientStop::get(Color::rgba(0.0,0.0,0.0,0.5), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                (0%, 50%),\n                (100%, 50%),\n                [GradientStop::get(Color::rgba(0.0,0.0,0.0,1.0), 0%), GradientStop::get(Color::rgba(0.0,0.0,0.0,0.5), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "            fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          12,
                          18
                        ],
                        "end_line_col": [
                          15,
                          125
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "corner_radii",
                  "raw_value": "corner_radii",
                  "token_type": "SettingKey",
                  "source_line": "            corner_radii={",
                  "token_location": {
                    "start_line_col": [
                      17,
                      12
                    ],
                    "end_line_col": [
                      17,
                      24
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "RectangleCornerRadii::radii(50.0,50.0,50.0,50.0)\n            ",
                      "raw_value": "{\n                RectangleCornerRadii::radii(50.0,50.0,50.0,50.0)\n            }",
                      "token_type": "Expression",
                      "source_line": "                RectangleCornerRadii::radii(50.0,50.0,50.0,50.0)",
                      "token_location": {
                        "start_line_col": [
                          18,
                          16
                        ],
                        "end_line_col": [
                          19,
                          12
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        },
        {
          "id": 11,
          "child_ids": [],
          "type_id": "COMMENT",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Comment",
          "raw_comment_string": "// Scrolling content pane\n"
        },
        {
          "id": 12,
          "child_ids": [
            13
          ],
          "type_id": "pax_std::primitives::Scroller",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      14
                    ],
                    "end_line_col": [
                      24,
                      19
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        20
                      ],
                      "end_line_col": [
                        24,
                        24
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      25
                    ],
                    "end_line_col": [
                      24,
                      31
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        32
                      ],
                      "end_line_col": [
                        24,
                        36
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "size_inner_pane_x",
                  "raw_value": "size_inner_pane_x",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      37
                    ],
                    "end_line_col": [
                      24,
                      54
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        55
                      ],
                      "end_line_col": [
                        24,
                        59
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "size_inner_pane_y",
                  "raw_value": "size_inner_pane_y",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      60
                    ],
                    "end_line_col": [
                      24,
                      77
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(5000.into())",
                    "raw_value": "5000px",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        78
                      ],
                      "end_line_col": [
                        24,
                        84
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "scroll_enabled_x",
                  "raw_value": "scroll_enabled_x",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      85
                    ],
                    "end_line_col": [
                      24,
                      101
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "false",
                    "raw_value": "false",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        102
                      ],
                      "end_line_col": [
                        24,
                        107
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "scroll_enabled_y",
                  "raw_value": "scroll_enabled_y",
                  "token_type": "SettingKey",
                  "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                  "token_location": {
                    "start_line_col": [
                      24,
                      108
                    ],
                    "end_line_col": [
                      24,
                      124
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "true",
                    "raw_value": "true",
                    "token_type": "LiteralValue",
                    "source_line": "    <Scroller width=100% height=100% size_inner_pane_x=100% size_inner_pane_y=5000px scroll_enabled_x=false scroll_enabled_y=true>",
                    "token_location": {
                      "start_line_col": [
                        24,
                        125
                      ],
                      "end_line_col": [
                        24,
                        129
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Scroller",
          "raw_comment_string": null
        },
        {
          "id": 13,
          "child_ids": [
            14,
            20,
            27,
            34,
            41
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=5 direction=StackerDirection::Vertical>",
                  "token_location": {
                    "start_line_col": [
                      25,
                      17
                    ],
                    "end_line_col": [
                      25,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(5 )",
                    "raw_value": "5 ",
                    "token_type": "LiteralValue",
                    "source_line": "        <Stacker cells=5 direction=StackerDirection::Vertical>",
                    "token_location": {
                      "start_line_col": [
                        25,
                        23
                      ],
                      "end_line_col": [
                        25,
                        25
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=5 direction=StackerDirection::Vertical>",
                  "token_location": {
                    "start_line_col": [
                      25,
                      25
                    ],
                    "end_line_col": [
                      25,
                      34
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical",
                    "raw_value": "StackerDirection::Vertical",
                    "token_type": "LiteralValue",
                    "source_line": "        <Stacker cells=5 direction=StackerDirection::Vertical>",
                    "token_location": {
                      "start_line_col": [
                        25,
                        35
                      ],
                      "end_line_col": [
                        25,
                        61
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 14,
          "child_ids": [
            15,
            19
          ],
          "type_id": "pax_std::primitives::Group",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Group",
          "raw_comment_string": null
        },
        {
          "id": 15,
          "child_ids": [
            16
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "            <Frame id=f1>",
                  "token_location": {
                    "start_line_col": [
                      27,
                      19
                    ],
                    "end_line_col": [
                      27,
                      21
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "f1",
                      "raw_value": "f1",
                      "token_type": "Identifier",
                      "source_line": "            <Frame id=f1>",
                      "token_location": {
                        "start_line_col": [
                          27,
                          22
                        ],
                        "end_line_col": [
                          27,
                          24
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 16,
          "child_ids": [
            17,
            18
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      28,
                      25
                    ],
                    "end_line_col": [
                      28,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(2 )",
                    "raw_value": "2 ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        28,
                        31
                      ],
                      "end_line_col": [
                        28,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      28,
                      33
                    ],
                    "end_line_col": [
                      28,
                      42
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical ",
                    "raw_value": "StackerDirection::Vertical ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        28,
                        43
                      ],
                      "end_line_col": [
                        28,
                        70
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      28,
                      70
                    ],
                    "end_line_col": [
                      28,
                      76
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(20.into())",
                    "raw_value": "20px",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        28,
                        77
                      ],
                      "end_line_col": [
                        28,
                        81
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "sizes",
                  "raw_value": "sizes",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      28,
                      82
                    ],
                    "end_line_col": [
                      28,
                      87
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "[Option::Some(70%), Option::None]",
                      "raw_value": "{[Option::Some(70%), Option::None]}",
                      "token_type": "Expression",
                      "source_line": "                <Stacker cells=2 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(70%), Option::None]} >",
                      "token_location": {
                        "start_line_col": [
                          28,
                          89
                        ],
                        "end_line_col": [
                          28,
                          122
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 17,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is a user interface engine \\n for native apps & websites\" class=h1 />",
                  "token_location": {
                    "start_line_col": [
                      29,
                      26
                    ],
                    "end_line_col": [
                      29,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Pax is a user interface engine \\n for native apps & websites\")",
                    "raw_value": "\"Pax is a user interface engine \\n for native apps & websites\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"Pax is a user interface engine \\n for native apps & websites\" class=h1 />",
                    "token_location": {
                      "start_line_col": [
                        29,
                        31
                      ],
                      "end_line_col": [
                        29,
                        93
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is a user interface engine \\n for native apps & websites\" class=h1 />",
                  "token_location": {
                    "start_line_col": [
                      29,
                      94
                    ],
                    "end_line_col": [
                      29,
                      99
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "h1",
                      "raw_value": "h1",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"Pax is a user interface engine \\n for native apps & websites\" class=h1 />",
                      "token_location": {
                        "start_line_col": [
                          29,
                          100
                        ],
                        "end_line_col": [
                          29,
                          102
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 18,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\" id=l1 />",
                  "token_location": {
                    "start_line_col": [
                      30,
                      26
                    ],
                    "end_line_col": [
                      30,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\")",
                    "raw_value": "\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\" id=l1 />",
                    "token_location": {
                      "start_line_col": [
                        30,
                        31
                      ],
                      "end_line_col": [
                        30,
                        161
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\" id=l1 />",
                  "token_location": {
                    "start_line_col": [
                      30,
                      162
                    ],
                    "end_line_col": [
                      30,
                      164
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "l1",
                      "raw_value": "l1",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"[Docs](https://docs.pax.rs) | [GitHub](https://www.github.com/pax-lang/pax) | [Get Started](https://www.github.com/pax-lang/pax)\" id=l1 />",
                      "token_location": {
                        "start_line_col": [
                          30,
                          165
                        ],
                        "end_line_col": [
                          30,
                          167
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 19,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=100%",
                  "token_location": {
                    "start_line_col": [
                      33,
                      23
                    ],
                    "end_line_col": [
                      33,
                      28
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=100%",
                    "token_location": {
                      "start_line_col": [
                        33,
                        29
                      ],
                      "end_line_col": [
                        33,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=100%",
                  "token_location": {
                    "start_line_col": [
                      33,
                      34
                    ],
                    "end_line_col": [
                      33,
                      40
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=100%",
                    "token_location": {
                      "start_line_col": [
                        33,
                        41
                      ],
                      "end_line_col": [
                        33,
                        45
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "                fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      34,
                      16
                    ],
                    "end_line_col": [
                      34,
                      20
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(1.0,1.0,0.0), 0%), GradientStop::get(Color::rgb(1.0,0.0,1.0), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(1.0,1.0,0.0), 0%), GradientStop::get(Color::rgb(1.0,0.0,1.0), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "                fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          34,
                          22
                        ],
                        "end_line_col": [
                          37,
                          119
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        },
        {
          "id": 20,
          "child_ids": [
            21,
            26
          ],
          "type_id": "pax_std::primitives::Group",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Group",
          "raw_comment_string": null
        },
        {
          "id": 21,
          "child_ids": [
            22
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "            <Frame id=f2>",
                  "token_location": {
                    "start_line_col": [
                      41,
                      19
                    ],
                    "end_line_col": [
                      41,
                      21
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "f2",
                      "raw_value": "f2",
                      "token_type": "Identifier",
                      "source_line": "            <Frame id=f2>",
                      "token_location": {
                        "start_line_col": [
                          41,
                          22
                        ],
                        "end_line_col": [
                          41,
                          24
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 22,
          "child_ids": [
            23,
            24,
            25
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                  "token_location": {
                    "start_line_col": [
                      42,
                      21
                    ],
                    "end_line_col": [
                      42,
                      26
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(3 )",
                    "raw_value": "3 ",
                    "token_type": "LiteralValue",
                    "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                    "token_location": {
                      "start_line_col": [
                        42,
                        27
                      ],
                      "end_line_col": [
                        42,
                        29
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                  "token_location": {
                    "start_line_col": [
                      42,
                      29
                    ],
                    "end_line_col": [
                      42,
                      38
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical ",
                    "raw_value": "StackerDirection::Vertical ",
                    "token_type": "LiteralValue",
                    "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                    "token_location": {
                      "start_line_col": [
                        42,
                        39
                      ],
                      "end_line_col": [
                        42,
                        66
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                  "token_location": {
                    "start_line_col": [
                      42,
                      66
                    ],
                    "end_line_col": [
                      42,
                      72
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(20.into())",
                    "raw_value": "20px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                    "token_location": {
                      "start_line_col": [
                        42,
                        73
                      ],
                      "end_line_col": [
                        42,
                        77
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "sizes",
                  "raw_value": "sizes",
                  "token_type": "SettingKey",
                  "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                  "token_location": {
                    "start_line_col": [
                      42,
                      78
                    ],
                    "end_line_col": [
                      42,
                      83
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "[Option::Some(40%), Option::Some(20%), Option::None]",
                      "raw_value": "{[Option::Some(40%), Option::Some(20%), Option::None]}",
                      "token_type": "Expression",
                      "source_line": "            <Stacker cells=3 direction=StackerDirection::Vertical gutter=20px sizes={[Option::Some(40%), Option::Some(20%), Option::None]}>",
                      "token_location": {
                        "start_line_col": [
                          42,
                          85
                        ],
                        "end_line_col": [
                          42,
                          137
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 23,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"BUILD CREATIVELY\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      43,
                      22
                    ],
                    "end_line_col": [
                      43,
                      26
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"BUILD CREATIVELY\")",
                    "raw_value": "\"BUILD CREATIVELY\"",
                    "token_type": "LiteralValue",
                    "source_line": "                <Text text=\"BUILD CREATIVELY\" class=h2/>",
                    "token_location": {
                      "start_line_col": [
                        43,
                        27
                      ],
                      "end_line_col": [
                        43,
                        45
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"BUILD CREATIVELY\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      43,
                      46
                    ],
                    "end_line_col": [
                      43,
                      51
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "h2",
                      "raw_value": "h2",
                      "token_type": "Identifier",
                      "source_line": "                <Text text=\"BUILD CREATIVELY\" class=h2/>",
                      "token_location": {
                        "start_line_col": [
                          43,
                          52
                        ],
                        "end_line_col": [
                          43,
                          54
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 24,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      44,
                      22
                    ],
                    "end_line_col": [
                      44,
                      26
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\")",
                    "raw_value": "\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\"",
                    "token_type": "LiteralValue",
                    "source_line": "                <Text text=\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        44,
                        27
                      ],
                      "end_line_col": [
                        44,
                        202
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      44,
                      203
                    ],
                    "end_line_col": [
                      44,
                      208
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "                <Text text=\"Pax renders in the same coordinate space as a tool like Photoshop or Figma, with the addition of responsive positioning & sizing, as well as a fine-grained animation engine.\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          44,
                          209
                        ],
                        "end_line_col": [
                          44,
                          211
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 25,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      45,
                      22
                    ],
                    "end_line_col": [
                      45,
                      26
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\")",
                    "raw_value": "\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\"",
                    "token_type": "LiteralValue",
                    "source_line": "                <Text text=\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        45,
                        27
                      ],
                      "end_line_col": [
                        45,
                        176
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                <Text text=\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      45,
                      177
                    ],
                    "end_line_col": [
                      45,
                      182
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "                <Text text=\"Create and compose custom components into apps. Write application logic in Rust, while describing content & style in Pax’s declarative UI language.\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          45,
                          183
                        ],
                        "end_line_col": [
                          45,
                          185
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 26,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "        <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      48,
                      19
                    ],
                    "end_line_col": [
                      48,
                      24
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "        <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        48,
                        25
                      ],
                      "end_line_col": [
                        48,
                        29
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "        <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      48,
                      30
                    ],
                    "end_line_col": [
                      48,
                      36
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(1000.into())",
                    "raw_value": "1000px",
                    "token_type": "LiteralValue",
                    "source_line": "        <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        48,
                        37
                      ],
                      "end_line_col": [
                        48,
                        43
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "                fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      49,
                      16
                    ],
                    "end_line_col": [
                      49,
                      20
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(0.0,1.0,1.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,0.0), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(0.0,1.0,1.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,0.0), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "                fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          49,
                          22
                        ],
                        "end_line_col": [
                          52,
                          119
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        },
        {
          "id": 27,
          "child_ids": [
            28,
            33
          ],
          "type_id": "pax_std::primitives::Group",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Group",
          "raw_comment_string": null
        },
        {
          "id": 28,
          "child_ids": [
            29
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "        <Frame id=f2>",
                  "token_location": {
                    "start_line_col": [
                      56,
                      15
                    ],
                    "end_line_col": [
                      56,
                      17
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "f2",
                      "raw_value": "f2",
                      "token_type": "Identifier",
                      "source_line": "        <Frame id=f2>",
                      "token_location": {
                        "start_line_col": [
                          56,
                          18
                        ],
                        "end_line_col": [
                          56,
                          20
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 29,
          "child_ids": [
            30,
            31,
            32
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      57,
                      17
                    ],
                    "end_line_col": [
                      57,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(3 )",
                    "raw_value": "3 ",
                    "token_type": "LiteralValue",
                    "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        57,
                        23
                      ],
                      "end_line_col": [
                        57,
                        25
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      57,
                      25
                    ],
                    "end_line_col": [
                      57,
                      34
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical ",
                    "raw_value": "StackerDirection::Vertical ",
                    "token_type": "LiteralValue",
                    "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        57,
                        35
                      ],
                      "end_line_col": [
                        57,
                        62
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      57,
                      62
                    ],
                    "end_line_col": [
                      57,
                      68
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(10.into())",
                    "raw_value": "10px",
                    "token_type": "LiteralValue",
                    "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        57,
                        69
                      ],
                      "end_line_col": [
                        57,
                        73
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "sizes",
                  "raw_value": "sizes",
                  "token_type": "SettingKey",
                  "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      57,
                      74
                    ],
                    "end_line_col": [
                      57,
                      79
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "[Option::Some(40%), Option::Some(40%), Option::None]",
                      "raw_value": "{[Option::Some(40%), Option::Some(40%), Option::None]}",
                      "token_type": "Expression",
                      "source_line": "        <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(40%), Option::None]} >",
                      "token_location": {
                        "start_line_col": [
                          57,
                          81
                        ],
                        "end_line_col": [
                          57,
                          133
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 30,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"CREATE COLLABORATIVELY\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      58,
                      18
                    ],
                    "end_line_col": [
                      58,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"CREATE COLLABORATIVELY\")",
                    "raw_value": "\"CREATE COLLABORATIVELY\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"CREATE COLLABORATIVELY\" class=h2/>",
                    "token_location": {
                      "start_line_col": [
                        58,
                        23
                      ],
                      "end_line_col": [
                        58,
                        47
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"CREATE COLLABORATIVELY\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      58,
                      48
                    ],
                    "end_line_col": [
                      58,
                      53
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "h2",
                      "raw_value": "h2",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"CREATE COLLABORATIVELY\" class=h2/>",
                      "token_location": {
                        "start_line_col": [
                          58,
                          54
                        ],
                        "end_line_col": [
                          58,
                          56
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 31,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      59,
                      18
                    ],
                    "end_line_col": [
                      59,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\")",
                    "raw_value": "\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        59,
                        23
                      ],
                      "end_line_col": [
                        59,
                        237
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      59,
                      238
                    ],
                    "end_line_col": [
                      59,
                      243
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"Pax’s declarative language is grammatically constrained to be readable & writable by visual tooling. Our team is building a collaborative visual designer for Pax so anyone on your team can contribute to codebases\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          59,
                          244
                        ],
                        "end_line_col": [
                          59,
                          246
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 32,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"[Sign up for updates](https://developing.pax.rs)\" id=l2 />",
                  "token_location": {
                    "start_line_col": [
                      60,
                      18
                    ],
                    "end_line_col": [
                      60,
                      22
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"[Sign up for updates](https://developing.pax.rs)\")",
                    "raw_value": "\"[Sign up for updates](https://developing.pax.rs)\"",
                    "token_type": "LiteralValue",
                    "source_line": "            <Text text=\"[Sign up for updates](https://developing.pax.rs)\" id=l2 />",
                    "token_location": {
                      "start_line_col": [
                        60,
                        23
                      ],
                      "end_line_col": [
                        60,
                        73
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "            <Text text=\"[Sign up for updates](https://developing.pax.rs)\" id=l2 />",
                  "token_location": {
                    "start_line_col": [
                      60,
                      74
                    ],
                    "end_line_col": [
                      60,
                      76
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "l2",
                      "raw_value": "l2",
                      "token_type": "Identifier",
                      "source_line": "            <Text text=\"[Sign up for updates](https://developing.pax.rs)\" id=l2 />",
                      "token_location": {
                        "start_line_col": [
                          60,
                          77
                        ],
                        "end_line_col": [
                          60,
                          79
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 33,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "        <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      63,
                      19
                    ],
                    "end_line_col": [
                      63,
                      24
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "        <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        63,
                        25
                      ],
                      "end_line_col": [
                        63,
                        29
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "        <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      63,
                      30
                    ],
                    "end_line_col": [
                      63,
                      36
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(1000.into())",
                    "raw_value": "1000px",
                    "token_type": "LiteralValue",
                    "source_line": "        <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        63,
                        37
                      ],
                      "end_line_col": [
                        63,
                        43
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "                fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      64,
                      16
                    ],
                    "end_line_col": [
                      64,
                      20
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(1.0,0.0,0.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,1.0), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                    (0%, 0%),\n                    (100%, 100%),\n                    [GradientStop::get(Color::rgb(1.0,0.0,0.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,1.0), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "                fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          64,
                          22
                        ],
                        "end_line_col": [
                          67,
                          119
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        },
        {
          "id": 34,
          "child_ids": [
            35,
            40
          ],
          "type_id": "pax_std::primitives::Group",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Group",
          "raw_comment_string": null
        },
        {
          "id": 35,
          "child_ids": [
            36
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "            <Frame id=f2>",
                  "token_location": {
                    "start_line_col": [
                      71,
                      19
                    ],
                    "end_line_col": [
                      71,
                      21
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "f2",
                      "raw_value": "f2",
                      "token_type": "Identifier",
                      "source_line": "            <Frame id=f2>",
                      "token_location": {
                        "start_line_col": [
                          71,
                          22
                        ],
                        "end_line_col": [
                          71,
                          24
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 36,
          "child_ids": [
            37,
            38,
            39
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      72,
                      25
                    ],
                    "end_line_col": [
                      72,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(3 )",
                    "raw_value": "3 ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        72,
                        31
                      ],
                      "end_line_col": [
                        72,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      72,
                      33
                    ],
                    "end_line_col": [
                      72,
                      42
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical ",
                    "raw_value": "StackerDirection::Vertical ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        72,
                        43
                      ],
                      "end_line_col": [
                        72,
                        70
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      72,
                      70
                    ],
                    "end_line_col": [
                      72,
                      76
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(10.into())",
                    "raw_value": "10px",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        72,
                        77
                      ],
                      "end_line_col": [
                        72,
                        81
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "sizes",
                  "raw_value": "sizes",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      72,
                      82
                    ],
                    "end_line_col": [
                      72,
                      87
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "[Option::Some(40%), Option::Some(20%), Option::None]",
                      "raw_value": "{[Option::Some(40%), Option::Some(20%), Option::None]}",
                      "token_type": "Expression",
                      "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::Some(40%), Option::Some(20%), Option::None]} >",
                      "token_location": {
                        "start_line_col": [
                          72,
                          89
                        ],
                        "end_line_col": [
                          72,
                          141
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 37,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"FAST & LIGHTWEIGHT\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      73,
                      26
                    ],
                    "end_line_col": [
                      73,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"FAST & LIGHTWEIGHT\")",
                    "raw_value": "\"FAST & LIGHTWEIGHT\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"FAST & LIGHTWEIGHT\" class=h2/>",
                    "token_location": {
                      "start_line_col": [
                        73,
                        31
                      ],
                      "end_line_col": [
                        73,
                        51
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"FAST & LIGHTWEIGHT\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      73,
                      52
                    ],
                    "end_line_col": [
                      73,
                      57
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "h2",
                      "raw_value": "h2",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"FAST & LIGHTWEIGHT\" class=h2/>",
                      "token_location": {
                        "start_line_col": [
                          73,
                          58
                        ],
                        "end_line_col": [
                          73,
                          60
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 38,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      74,
                      26
                    ],
                    "end_line_col": [
                      74,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\")",
                    "raw_value": "\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        74,
                        31
                      ],
                      "end_line_col": [
                        74,
                        156
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      74,
                      157
                    ],
                    "end_line_col": [
                      74,
                      162
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"Pax is built in Rust and C with native-language bindings (e.g. Swift & TypeScript for macOS & Web platforms, respectively.)\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          74,
                          163
                        ],
                        "end_line_col": [
                          74,
                          165
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 39,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      75,
                      26
                    ],
                    "end_line_col": [
                      75,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\")",
                    "raw_value": "\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        75,
                        31
                      ],
                      "end_line_col": [
                        75,
                        156
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      75,
                      157
                    ],
                    "end_line_col": [
                      75,
                      162
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"Animations render at up to 240 frames per second. Footprints are tiny: <100KB for WebAssembly and <500KB for native builds.\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          75,
                          163
                        ],
                        "end_line_col": [
                          75,
                          165
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 40,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      78,
                      23
                    ],
                    "end_line_col": [
                      78,
                      28
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        78,
                        29
                      ],
                      "end_line_col": [
                        78,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      78,
                      34
                    ],
                    "end_line_col": [
                      78,
                      40
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(1000.into())",
                    "raw_value": "1000px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        78,
                        41
                      ],
                      "end_line_col": [
                        78,
                        47
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "                fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      79,
                      16
                    ],
                    "end_line_col": [
                      79,
                      20
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                (0%, 0%),\n                (100%, 100%),\n                [GradientStop::get(Color::rgb(1.0,0.0,1.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,0.0), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                (0%, 0%),\n                (100%, 100%),\n                [GradientStop::get(Color::rgb(1.0,0.0,1.0), 0%), GradientStop::get(Color::rgb(0.0,1.0,0.0), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "                fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          79,
                          22
                        ],
                        "end_line_col": [
                          82,
                          115
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        },
        {
          "id": 41,
          "child_ids": [
            42,
            47
          ],
          "type_id": "pax_std::primitives::Group",
          "control_flow_settings": null,
          "settings": null,
          "pascal_identifier": "Group",
          "raw_comment_string": null
        },
        {
          "id": 42,
          "child_ids": [
            43
          ],
          "type_id": "pax_std::primitives::Frame",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "id",
                  "raw_value": "id",
                  "token_type": "SettingKey",
                  "source_line": "            <Frame id=f2>",
                  "token_location": {
                    "start_line_col": [
                      86,
                      19
                    ],
                    "end_line_col": [
                      86,
                      21
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "f2",
                      "raw_value": "f2",
                      "token_type": "Identifier",
                      "source_line": "            <Frame id=f2>",
                      "token_location": {
                        "start_line_col": [
                          86,
                          22
                        ],
                        "end_line_col": [
                          86,
                          24
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Frame",
          "raw_comment_string": null
        },
        {
          "id": 43,
          "child_ids": [
            44,
            45,
            46
          ],
          "type_id": "pax_std::stacker::Stacker",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "cells",
                  "raw_value": "cells",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      87,
                      25
                    ],
                    "end_line_col": [
                      87,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Numeric::from(3 )",
                    "raw_value": "3 ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        87,
                        31
                      ],
                      "end_line_col": [
                        87,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "direction",
                  "raw_value": "direction",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      87,
                      33
                    ],
                    "end_line_col": [
                      87,
                      42
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StackerDirection::Vertical ",
                    "raw_value": "StackerDirection::Vertical ",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        87,
                        43
                      ],
                      "end_line_col": [
                        87,
                        70
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "gutter",
                  "raw_value": "gutter",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      87,
                      70
                    ],
                    "end_line_col": [
                      87,
                      76
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(10.into())",
                    "raw_value": "10px",
                    "token_type": "LiteralValue",
                    "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                    "token_location": {
                      "start_line_col": [
                        87,
                        77
                      ],
                      "end_line_col": [
                        87,
                        81
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "sizes",
                  "raw_value": "sizes",
                  "token_type": "SettingKey",
                  "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                  "token_location": {
                    "start_line_col": [
                      87,
                      82
                    ],
                    "end_line_col": [
                      87,
                      87
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "[Option::None, Option::Some(20%), Option::None]",
                      "raw_value": "{[Option::None, Option::Some(20%), Option::None]}",
                      "token_type": "Expression",
                      "source_line": "                <Stacker cells=3 direction=StackerDirection::Vertical gutter=10px sizes={[Option::None, Option::Some(20%), Option::None]} >",
                      "token_location": {
                        "start_line_col": [
                          87,
                          89
                        ],
                        "end_line_col": [
                          87,
                          136
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Stacker",
          "raw_comment_string": null
        },
        {
          "id": 44,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"OPEN SOURCE\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      88,
                      26
                    ],
                    "end_line_col": [
                      88,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"OPEN SOURCE\")",
                    "raw_value": "\"OPEN SOURCE\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"OPEN SOURCE\" class=h2/>",
                    "token_location": {
                      "start_line_col": [
                        88,
                        31
                      ],
                      "end_line_col": [
                        88,
                        44
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"OPEN SOURCE\" class=h2/>",
                  "token_location": {
                    "start_line_col": [
                      88,
                      45
                    ],
                    "end_line_col": [
                      88,
                      50
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "h2",
                      "raw_value": "h2",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"OPEN SOURCE\" class=h2/>",
                      "token_location": {
                        "start_line_col": [
                          88,
                          51
                        ],
                        "end_line_col": [
                          88,
                          53
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 45,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      89,
                      26
                    ],
                    "end_line_col": [
                      89,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\")",
                    "raw_value": "\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\" class=p2 />",
                    "token_location": {
                      "start_line_col": [
                        89,
                        31
                      ],
                      "end_line_col": [
                        89,
                        243
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\" class=p2 />",
                  "token_location": {
                    "start_line_col": [
                      89,
                      244
                    ],
                    "end_line_col": [
                      89,
                      249
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p2",
                      "raw_value": "p2",
                      "token_type": "Identifier",
                      "source_line": "                    <Text text=\"Pax is as free as HTML. Licensed MIT or Apache 2.0, your choice. Pax has been under development already for two years and we plan to keep at it for many years to come.  Our motivations behind Pax are threefold:\" class=p2 />",
                      "token_location": {
                        "start_line_col": [
                          89,
                          250
                        ],
                        "end_line_col": [
                          89,
                          252
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 46,
          "child_ids": [],
          "type_id": "pax_std::primitives::Text",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "text",
                  "raw_value": "text",
                  "token_type": "SettingKey",
                  "source_line": "                    <Text text=\"1. To make software creation more accessible to more of humanity",
                  "token_location": {
                    "start_line_col": [
                      90,
                      26
                    ],
                    "end_line_col": [
                      90,
                      30
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "StringBox::from(\"1. To make software creation more accessible to more of humanity\n2. To unlock the digital interactive medium as a medium for art & creative expression\n3. To build a business around enabling visual creatives & non-coders to create software hand-in-hand with software developer\")",
                    "raw_value": "\"1. To make software creation more accessible to more of humanity\n2. To unlock the digital interactive medium as a medium for art & creative expression\n3. To build a business around enabling visual creatives & non-coders to create software hand-in-hand with software developer\"",
                    "token_type": "LiteralValue",
                    "source_line": "                    <Text text=\"1. To make software creation more accessible to more of humanity",
                    "token_location": {
                      "start_line_col": [
                        90,
                        31
                      ],
                      "end_line_col": [
                        92,
                        125
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "class",
                  "raw_value": "class",
                  "token_type": "SettingKey",
                  "source_line": "3. To build a business around enabling visual creatives & non-coders to create software hand-in-hand with software developer\" class=p3 />",
                  "token_location": {
                    "start_line_col": [
                      92,
                      126
                    ],
                    "end_line_col": [
                      92,
                      131
                    ]
                  }
                },
                {
                  "Identifier": [
                    {
                      "token_value": "p3",
                      "raw_value": "p3",
                      "token_type": "Identifier",
                      "source_line": "3. To build a business around enabling visual creatives & non-coders to create software hand-in-hand with software developer\" class=p3 />",
                      "token_location": {
                        "start_line_col": [
                          92,
                          132
                        ],
                        "end_line_col": [
                          92,
                          134
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Text",
          "raw_comment_string": null
        },
        {
          "id": 47,
          "child_ids": [],
          "type_id": "pax_std::primitives::Rectangle",
          "control_flow_settings": null,
          "settings": [
            {
              "Setting": [
                {
                  "token_value": "width",
                  "raw_value": "width",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      95,
                      23
                    ],
                    "end_line_col": [
                      95,
                      28
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Percent(100.into())",
                    "raw_value": "100%",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        95,
                        29
                      ],
                      "end_line_col": [
                        95,
                        33
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "height",
                  "raw_value": "height",
                  "token_type": "SettingKey",
                  "source_line": "            <Rectangle width=100% height=1000px",
                  "token_location": {
                    "start_line_col": [
                      95,
                      34
                    ],
                    "end_line_col": [
                      95,
                      40
                    ]
                  }
                },
                {
                  "LiteralValue": {
                    "token_value": "Size::Pixels(1000.into())",
                    "raw_value": "1000px",
                    "token_type": "LiteralValue",
                    "source_line": "            <Rectangle width=100% height=1000px",
                    "token_location": {
                      "start_line_col": [
                        95,
                        41
                      ],
                      "end_line_col": [
                        95,
                        47
                      ]
                    }
                  }
                }
              ]
            },
            {
              "Setting": [
                {
                  "token_value": "fill",
                  "raw_value": "fill",
                  "token_type": "SettingKey",
                  "source_line": "                fill={Fill::linearGradient(",
                  "token_location": {
                    "start_line_col": [
                      96,
                      16
                    ],
                    "end_line_col": [
                      96,
                      20
                    ]
                  }
                },
                {
                  "Expression": [
                    {
                      "token_value": "Fill::linearGradient(\n                (0%, 0%),\n                (100%, 100%),\n                [GradientStop::get(Color::rgb(0.0,0.0,1.0), 0%), GradientStop::get(Color::rgb(1.0,1.0,0.0), 100%)])",
                      "raw_value": "{Fill::linearGradient(\n                (0%, 0%),\n                (100%, 100%),\n                [GradientStop::get(Color::rgb(0.0,0.0,1.0), 0%), GradientStop::get(Color::rgb(1.0,1.0,0.0), 100%)])}",
                      "token_type": "Expression",
                      "source_line": "                fill={Fill::linearGradient(",
                      "token_location": {
                        "start_line_col": [
                          96,
                          22
                        ],
                        "end_line_col": [
                          99,
                          115
                        ]
                      }
                    },
                    null
                  ]
                }
              ]
            }
          ],
          "pascal_identifier": "Rectangle",
          "raw_comment_string": null
        }
      ],
      "settings": [
        {
          "SelectorBlock": [
            {
              "token_value": ".link",
              "raw_value": ".link",
              "token_type": "Selector",
              "source_line": "    .link {",
              "token_location": {
                "start_line_col": [
                  107,
                  4
                ],
                "end_line_col": [
                  107,
                  9
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "style_link",
                      "raw_value": "style_link",
                      "token_type": "SettingKey",
                      "source_line": "        style_link: {",
                      "token_location": {
                        "start_line_col": [
                          108,
                          8
                        ],
                        "end_line_col": [
                          108,
                          18
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    109,
                                    12
                                  ],
                                  "end_line_col": [
                                    109,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        109,
                                        19
                                      ],
                                      "end_line_col": [
                                        109,
                                        81
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 22px,",
                                "token_location": {
                                  "start_line_col": [
                                    110,
                                    12
                                  ],
                                  "end_line_col": [
                                    110,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(22.into())",
                                  "raw_value": "22px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 22px,",
                                  "token_location": {
                                    "start_line_col": [
                                      110,
                                      23
                                    ],
                                    "end_line_col": [
                                      110,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    111,
                                    12
                                  ],
                                  "end_line_col": [
                                    111,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(1.0,1.0,1.0,1.0)",
                                    "raw_value": "{Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        111,
                                        19
                                      ],
                                      "end_line_col": [
                                        111,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    112,
                                    12
                                  ],
                                  "end_line_col": [
                                    112,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Center",
                                  "raw_value": "TextAlignVertical::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      112,
                                      28
                                    ],
                                    "end_line_col": [
                                      112,
                                      53
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    113,
                                    12
                                  ],
                                  "end_line_col": [
                                    113,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      113,
                                      30
                                    ],
                                    "end_line_col": [
                                      113,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "underline",
                                "raw_value": "underline",
                                "token_type": "SettingKey",
                                "source_line": "            underline: true",
                                "token_location": {
                                  "start_line_col": [
                                    114,
                                    12
                                  ],
                                  "end_line_col": [
                                    114,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "true",
                                  "raw_value": "true",
                                  "token_type": "LiteralValue",
                                  "source_line": "            underline: true",
                                  "token_location": {
                                    "start_line_col": [
                                      114,
                                      23
                                    ],
                                    "end_line_col": [
                                      114,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 80px,",
                      "token_location": {
                        "start_line_col": [
                          116,
                          8
                        ],
                        "end_line_col": [
                          116,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Pixels(80.into())",
                        "raw_value": "80px",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 80px,",
                        "token_location": {
                          "start_line_col": [
                            116,
                            15
                          ],
                          "end_line_col": [
                            116,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "height",
                      "raw_value": "height",
                      "token_type": "SettingKey",
                      "source_line": "        height: 50px,",
                      "token_location": {
                        "start_line_col": [
                          117,
                          8
                        ],
                        "end_line_col": [
                          117,
                          14
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Pixels(50.into())",
                        "raw_value": "50px",
                        "token_type": "LiteralValue",
                        "source_line": "        height: 50px,",
                        "token_location": {
                          "start_line_col": [
                            117,
                            16
                          ],
                          "end_line_col": [
                            117,
                            20
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "y",
                      "raw_value": "y",
                      "token_type": "SettingKey",
                      "source_line": "        y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          118,
                          8
                        ],
                        "end_line_col": [
                          118,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            118,
                            11
                          ],
                          "end_line_col": [
                            118,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_y",
                      "raw_value": "anchor_y",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          119,
                          8
                        ],
                        "end_line_col": [
                          119,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            119,
                            18
                          ],
                          "end_line_col": [
                            119,
                            21
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": "#f1",
              "raw_value": "#f1",
              "token_type": "Selector",
              "source_line": "    #f1 {",
              "token_location": {
                "start_line_col": [
                  121,
                  4
                ],
                "end_line_col": [
                  121,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 80%,",
                      "token_location": {
                        "start_line_col": [
                          122,
                          8
                        ],
                        "end_line_col": [
                          122,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(80.into())",
                        "raw_value": "80%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 80%,",
                        "token_location": {
                          "start_line_col": [
                            122,
                            15
                          ],
                          "end_line_col": [
                            122,
                            18
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "height",
                      "raw_value": "height",
                      "token_type": "SettingKey",
                      "source_line": "        height: 800px,",
                      "token_location": {
                        "start_line_col": [
                          123,
                          8
                        ],
                        "end_line_col": [
                          123,
                          14
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Pixels(800.into())",
                        "raw_value": "800px",
                        "token_type": "LiteralValue",
                        "source_line": "        height: 800px,",
                        "token_location": {
                          "start_line_col": [
                            123,
                            16
                          ],
                          "end_line_col": [
                            123,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "x",
                      "raw_value": "x",
                      "token_type": "SettingKey",
                      "source_line": "        x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          124,
                          8
                        ],
                        "end_line_col": [
                          124,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            124,
                            11
                          ],
                          "end_line_col": [
                            124,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "y",
                      "raw_value": "y",
                      "token_type": "SettingKey",
                      "source_line": "        y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          125,
                          8
                        ],
                        "end_line_col": [
                          125,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            125,
                            11
                          ],
                          "end_line_col": [
                            125,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_x",
                      "raw_value": "anchor_x",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          126,
                          8
                        ],
                        "end_line_col": [
                          126,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            126,
                            18
                          ],
                          "end_line_col": [
                            126,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_y",
                      "raw_value": "anchor_y",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          127,
                          8
                        ],
                        "end_line_col": [
                          127,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            127,
                            18
                          ],
                          "end_line_col": [
                            127,
                            21
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": "#f2",
              "raw_value": "#f2",
              "token_type": "Selector",
              "source_line": "    #f2 {",
              "token_location": {
                "start_line_col": [
                  129,
                  4
                ],
                "end_line_col": [
                  129,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 75%,",
                      "token_location": {
                        "start_line_col": [
                          130,
                          8
                        ],
                        "end_line_col": [
                          130,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(75.into())",
                        "raw_value": "75%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 75%,",
                        "token_location": {
                          "start_line_col": [
                            130,
                            15
                          ],
                          "end_line_col": [
                            130,
                            18
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "height",
                      "raw_value": "height",
                      "token_type": "SettingKey",
                      "source_line": "        height: 600px,",
                      "token_location": {
                        "start_line_col": [
                          131,
                          8
                        ],
                        "end_line_col": [
                          131,
                          14
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Pixels(600.into())",
                        "raw_value": "600px",
                        "token_type": "LiteralValue",
                        "source_line": "        height: 600px,",
                        "token_location": {
                          "start_line_col": [
                            131,
                            16
                          ],
                          "end_line_col": [
                            131,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "x",
                      "raw_value": "x",
                      "token_type": "SettingKey",
                      "source_line": "        x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          132,
                          8
                        ],
                        "end_line_col": [
                          132,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            132,
                            11
                          ],
                          "end_line_col": [
                            132,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "y",
                      "raw_value": "y",
                      "token_type": "SettingKey",
                      "source_line": "        y: 40%,",
                      "token_location": {
                        "start_line_col": [
                          133,
                          8
                        ],
                        "end_line_col": [
                          133,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(40.into())",
                        "raw_value": "40%",
                        "token_type": "LiteralValue",
                        "source_line": "        y: 40%,",
                        "token_location": {
                          "start_line_col": [
                            133,
                            11
                          ],
                          "end_line_col": [
                            133,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_x",
                      "raw_value": "anchor_x",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          134,
                          8
                        ],
                        "end_line_col": [
                          134,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            134,
                            18
                          ],
                          "end_line_col": [
                            134,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_y",
                      "raw_value": "anchor_y",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          135,
                          8
                        ],
                        "end_line_col": [
                          135,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            135,
                            18
                          ],
                          "end_line_col": [
                            135,
                            21
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": "#f3",
              "raw_value": "#f3",
              "token_type": "Selector",
              "source_line": "    #f3 {",
              "token_location": {
                "start_line_col": [
                  137,
                  4
                ],
                "end_line_col": [
                  137,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 75%,",
                      "token_location": {
                        "start_line_col": [
                          138,
                          8
                        ],
                        "end_line_col": [
                          138,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(75.into())",
                        "raw_value": "75%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 75%,",
                        "token_location": {
                          "start_line_col": [
                            138,
                            15
                          ],
                          "end_line_col": [
                            138,
                            18
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "height",
                      "raw_value": "height",
                      "token_type": "SettingKey",
                      "source_line": "        height: 300px,",
                      "token_location": {
                        "start_line_col": [
                          139,
                          8
                        ],
                        "end_line_col": [
                          139,
                          14
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Pixels(300.into())",
                        "raw_value": "300px",
                        "token_type": "LiteralValue",
                        "source_line": "        height: 300px,",
                        "token_location": {
                          "start_line_col": [
                            139,
                            16
                          ],
                          "end_line_col": [
                            139,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "x",
                      "raw_value": "x",
                      "token_type": "SettingKey",
                      "source_line": "        x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          140,
                          8
                        ],
                        "end_line_col": [
                          140,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            140,
                            11
                          ],
                          "end_line_col": [
                            140,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "y",
                      "raw_value": "y",
                      "token_type": "SettingKey",
                      "source_line": "        y: 40%,",
                      "token_location": {
                        "start_line_col": [
                          141,
                          8
                        ],
                        "end_line_col": [
                          141,
                          9
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(40.into())",
                        "raw_value": "40%",
                        "token_type": "LiteralValue",
                        "source_line": "        y: 40%,",
                        "token_location": {
                          "start_line_col": [
                            141,
                            11
                          ],
                          "end_line_col": [
                            141,
                            14
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_x",
                      "raw_value": "anchor_x",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_x: 50%,",
                      "token_location": {
                        "start_line_col": [
                          142,
                          8
                        ],
                        "end_line_col": [
                          142,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_x: 50%,",
                        "token_location": {
                          "start_line_col": [
                            142,
                            18
                          ],
                          "end_line_col": [
                            142,
                            21
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "anchor_y",
                      "raw_value": "anchor_y",
                      "token_type": "SettingKey",
                      "source_line": "        anchor_y: 50%,",
                      "token_location": {
                        "start_line_col": [
                          143,
                          8
                        ],
                        "end_line_col": [
                          143,
                          16
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(50.into())",
                        "raw_value": "50%",
                        "token_type": "LiteralValue",
                        "source_line": "        anchor_y: 50%,",
                        "token_location": {
                          "start_line_col": [
                            143,
                            18
                          ],
                          "end_line_col": [
                            143,
                            21
                          ]
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": ".h1",
              "raw_value": ".h1",
              "token_type": "Selector",
              "source_line": "    .h1 {",
              "token_location": {
                "start_line_col": [
                  145,
                  4
                ],
                "end_line_col": [
                  145,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%,",
                      "token_location": {
                        "start_line_col": [
                          146,
                          8
                        ],
                        "end_line_col": [
                          146,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%,",
                        "token_location": {
                          "start_line_col": [
                            146,
                            15
                          ],
                          "end_line_col": [
                            146,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style",
                      "raw_value": "style",
                      "token_type": "SettingKey",
                      "source_line": "        style: {",
                      "token_location": {
                        "start_line_col": [
                          147,
                          8
                        ],
                        "end_line_col": [
                          147,
                          13
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    148,
                                    12
                                  ],
                                  "end_line_col": [
                                    148,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        148,
                                        19
                                      ],
                                      "end_line_col": [
                                        148,
                                        81
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 72px,",
                                "token_location": {
                                  "start_line_col": [
                                    149,
                                    12
                                  ],
                                  "end_line_col": [
                                    149,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(72.into())",
                                  "raw_value": "72px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 72px,",
                                  "token_location": {
                                    "start_line_col": [
                                      149,
                                      23
                                    ],
                                    "end_line_col": [
                                      149,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    150,
                                    12
                                  ],
                                  "end_line_col": [
                                    150,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(1.0,1.0,1.0,1.0)",
                                    "raw_value": "{Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        150,
                                        19
                                      ],
                                      "end_line_col": [
                                        150,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    151,
                                    12
                                  ],
                                  "end_line_col": [
                                    151,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Center",
                                  "raw_value": "TextAlignVertical::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      151,
                                      28
                                    ],
                                    "end_line_col": [
                                      151,
                                      53
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    152,
                                    12
                                  ],
                                  "end_line_col": [
                                    152,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      152,
                                      30
                                    ],
                                    "end_line_col": [
                                      152,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    153,
                                    12
                                  ],
                                  "end_line_col": [
                                    153,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      153,
                                      29
                                    ],
                                    "end_line_col": [
                                      153,
                                      56
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": ".h2",
              "raw_value": ".h2",
              "token_type": "Selector",
              "source_line": "    .h2 {",
              "token_location": {
                "start_line_col": [
                  156,
                  4
                ],
                "end_line_col": [
                  156,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%,",
                      "token_location": {
                        "start_line_col": [
                          157,
                          8
                        ],
                        "end_line_col": [
                          157,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%,",
                        "token_location": {
                          "start_line_col": [
                            157,
                            15
                          ],
                          "end_line_col": [
                            157,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style",
                      "raw_value": "style",
                      "token_type": "SettingKey",
                      "source_line": "        style: {",
                      "token_location": {
                        "start_line_col": [
                          158,
                          8
                        ],
                        "end_line_col": [
                          158,
                          13
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Italic, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    159,
                                    12
                                  ],
                                  "end_line_col": [
                                    159,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Italic, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Italic, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Italic, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        159,
                                        19
                                      ],
                                      "end_line_col": [
                                        159,
                                        81
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 72px,",
                                "token_location": {
                                  "start_line_col": [
                                    160,
                                    12
                                  ],
                                  "end_line_col": [
                                    160,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(72.into())",
                                  "raw_value": "72px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 72px,",
                                  "token_location": {
                                    "start_line_col": [
                                      160,
                                      23
                                    ],
                                    "end_line_col": [
                                      160,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    161,
                                    12
                                  ],
                                  "end_line_col": [
                                    161,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(1.0,1.0,1.0,1.0)",
                                    "raw_value": "{Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        161,
                                        19
                                      ],
                                      "end_line_col": [
                                        161,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    162,
                                    12
                                  ],
                                  "end_line_col": [
                                    162,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Center",
                                  "raw_value": "TextAlignVertical::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      162,
                                      28
                                    ],
                                    "end_line_col": [
                                      162,
                                      53
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    163,
                                    12
                                  ],
                                  "end_line_col": [
                                    163,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      163,
                                      30
                                    ],
                                    "end_line_col": [
                                      163,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    164,
                                    12
                                  ],
                                  "end_line_col": [
                                    164,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      164,
                                      29
                                    ],
                                    "end_line_col": [
                                      164,
                                      56
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": ".test",
              "raw_value": ".test",
              "token_type": "Selector",
              "source_line": "    .test {",
              "token_location": {
                "start_line_col": [
                  167,
                  4
                ],
                "end_line_col": [
                  167,
                  9
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "            width: 100%,",
                      "token_location": {
                        "start_line_col": [
                          168,
                          12
                        ],
                        "end_line_col": [
                          168,
                          17
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "            width: 100%,",
                        "token_location": {
                          "start_line_col": [
                            168,
                            19
                          ],
                          "end_line_col": [
                            168,
                            23
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style",
                      "raw_value": "style",
                      "token_type": "SettingKey",
                      "source_line": "            style: {",
                      "token_location": {
                        "start_line_col": [
                          169,
                          12
                        ],
                        "end_line_col": [
                          169,
                          17
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "                font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    170,
                                    16
                                  ],
                                  "end_line_col": [
                                    170,
                                    20
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "                font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        170,
                                        23
                                      ],
                                      "end_line_col": [
                                        170,
                                        85
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "                font_size: 54px,",
                                "token_location": {
                                  "start_line_col": [
                                    171,
                                    16
                                  ],
                                  "end_line_col": [
                                    171,
                                    25
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(54.into())",
                                  "raw_value": "54px",
                                  "token_type": "LiteralValue",
                                  "source_line": "                font_size: 54px,",
                                  "token_location": {
                                    "start_line_col": [
                                      171,
                                      27
                                    ],
                                    "end_line_col": [
                                      171,
                                      31
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "                fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    172,
                                    16
                                  ],
                                  "end_line_col": [
                                    172,
                                    20
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(1.0,1.0,1.0,1.0)",
                                    "raw_value": "{Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "                fill: {Color::rgba(1.0,1.0,1.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        172,
                                        23
                                      ],
                                      "end_line_col": [
                                        172,
                                        51
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "                align_vertical: TextAlignVertical::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    173,
                                    16
                                  ],
                                  "end_line_col": [
                                    173,
                                    30
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Center",
                                  "raw_value": "TextAlignVertical::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "                align_vertical: TextAlignVertical::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      173,
                                      32
                                    ],
                                    "end_line_col": [
                                      173,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "                align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    174,
                                    16
                                  ],
                                  "end_line_col": [
                                    174,
                                    32
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "                align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      174,
                                      34
                                    ],
                                    "end_line_col": [
                                      174,
                                      61
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "                align_multiline: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    175,
                                    16
                                  ],
                                  "end_line_col": [
                                    175,
                                    31
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "                align_multiline: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      175,
                                      33
                                    ],
                                    "end_line_col": [
                                      175,
                                      60
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": "#l1",
              "raw_value": "#l1",
              "token_type": "Selector",
              "source_line": "    #l1 {",
              "token_location": {
                "start_line_col": [
                  178,
                  4
                ],
                "end_line_col": [
                  178,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%",
                      "token_location": {
                        "start_line_col": [
                          179,
                          8
                        ],
                        "end_line_col": [
                          179,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%",
                        "token_location": {
                          "start_line_col": [
                            179,
                            15
                          ],
                          "end_line_col": [
                            179,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style_link",
                      "raw_value": "style_link",
                      "token_type": "SettingKey",
                      "source_line": "        style_link: {",
                      "token_location": {
                        "start_line_col": [
                          180,
                          8
                        ],
                        "end_line_col": [
                          180,
                          18
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    181,
                                    12
                                  ],
                                  "end_line_col": [
                                    181,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        181,
                                        19
                                      ],
                                      "end_line_col": [
                                        181,
                                        81
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 36px,",
                                "token_location": {
                                  "start_line_col": [
                                    182,
                                    12
                                  ],
                                  "end_line_col": [
                                    182,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(36.into())",
                                  "raw_value": "36px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 36px,",
                                  "token_location": {
                                    "start_line_col": [
                                      182,
                                      23
                                    ],
                                    "end_line_col": [
                                      182,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    183,
                                    12
                                  ],
                                  "end_line_col": [
                                    183,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(0.0,0.0,0.0,1.0)",
                                    "raw_value": "{Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        183,
                                        19
                                      ],
                                      "end_line_col": [
                                        183,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Top,",
                                "token_location": {
                                  "start_line_col": [
                                    184,
                                    12
                                  ],
                                  "end_line_col": [
                                    184,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Top",
                                  "raw_value": "TextAlignVertical::Top",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Top,",
                                  "token_location": {
                                    "start_line_col": [
                                      184,
                                      28
                                    ],
                                    "end_line_col": [
                                      184,
                                      50
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    185,
                                    12
                                  ],
                                  "end_line_col": [
                                    185,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      185,
                                      30
                                    ],
                                    "end_line_col": [
                                      185,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    186,
                                    12
                                  ],
                                  "end_line_col": [
                                    186,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      186,
                                      29
                                    ],
                                    "end_line_col": [
                                      186,
                                      56
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "underline",
                                "raw_value": "underline",
                                "token_type": "SettingKey",
                                "source_line": "            underline: true,",
                                "token_location": {
                                  "start_line_col": [
                                    187,
                                    12
                                  ],
                                  "end_line_col": [
                                    187,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "true",
                                  "raw_value": "true",
                                  "token_type": "LiteralValue",
                                  "source_line": "            underline: true,",
                                  "token_location": {
                                    "start_line_col": [
                                      187,
                                      23
                                    ],
                                    "end_line_col": [
                                      187,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": "#l2",
              "raw_value": "#l2",
              "token_type": "Selector",
              "source_line": "    #l2 {",
              "token_location": {
                "start_line_col": [
                  190,
                  4
                ],
                "end_line_col": [
                  190,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%",
                      "token_location": {
                        "start_line_col": [
                          191,
                          8
                        ],
                        "end_line_col": [
                          191,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%",
                        "token_location": {
                          "start_line_col": [
                            191,
                            15
                          ],
                          "end_line_col": [
                            191,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style_link",
                      "raw_value": "style_link",
                      "token_type": "SettingKey",
                      "source_line": "        style_link: {",
                      "token_location": {
                        "start_line_col": [
                          192,
                          8
                        ],
                        "end_line_col": [
                          192,
                          18
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                "token_location": {
                                  "start_line_col": [
                                    193,
                                    12
                                  ],
                                  "end_line_col": [
                                    193,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Bold)},",
                                    "token_location": {
                                      "start_line_col": [
                                        193,
                                        19
                                      ],
                                      "end_line_col": [
                                        193,
                                        81
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 36px,",
                                "token_location": {
                                  "start_line_col": [
                                    194,
                                    12
                                  ],
                                  "end_line_col": [
                                    194,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(36.into())",
                                  "raw_value": "36px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 36px,",
                                  "token_location": {
                                    "start_line_col": [
                                      194,
                                      23
                                    ],
                                    "end_line_col": [
                                      194,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    195,
                                    12
                                  ],
                                  "end_line_col": [
                                    195,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(0.0,0.0,0.0,1.0)",
                                    "raw_value": "{Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        195,
                                        19
                                      ],
                                      "end_line_col": [
                                        195,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    196,
                                    12
                                  ],
                                  "end_line_col": [
                                    196,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Center",
                                  "raw_value": "TextAlignVertical::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      196,
                                      28
                                    ],
                                    "end_line_col": [
                                      196,
                                      53
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    197,
                                    12
                                  ],
                                  "end_line_col": [
                                    197,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      197,
                                      30
                                    ],
                                    "end_line_col": [
                                      197,
                                      57
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                "token_location": {
                                  "start_line_col": [
                                    198,
                                    12
                                  ],
                                  "end_line_col": [
                                    198,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Center",
                                  "raw_value": "TextAlignHorizontal::Center",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Center,",
                                  "token_location": {
                                    "start_line_col": [
                                      198,
                                      29
                                    ],
                                    "end_line_col": [
                                      198,
                                      56
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "underline",
                                "raw_value": "underline",
                                "token_type": "SettingKey",
                                "source_line": "            underline: true,",
                                "token_location": {
                                  "start_line_col": [
                                    199,
                                    12
                                  ],
                                  "end_line_col": [
                                    199,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "true",
                                  "raw_value": "true",
                                  "token_type": "LiteralValue",
                                  "source_line": "            underline: true,",
                                  "token_location": {
                                    "start_line_col": [
                                      199,
                                      23
                                    ],
                                    "end_line_col": [
                                      199,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": ".p2",
              "raw_value": ".p2",
              "token_type": "Selector",
              "source_line": "    .p2 {",
              "token_location": {
                "start_line_col": [
                  202,
                  4
                ],
                "end_line_col": [
                  202,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%,",
                      "token_location": {
                        "start_line_col": [
                          203,
                          8
                        ],
                        "end_line_col": [
                          203,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%,",
                        "token_location": {
                          "start_line_col": [
                            203,
                            15
                          ],
                          "end_line_col": [
                            203,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style",
                      "raw_value": "style",
                      "token_type": "SettingKey",
                      "source_line": "        style: {",
                      "token_location": {
                        "start_line_col": [
                          204,
                          8
                        ],
                        "end_line_col": [
                          204,
                          13
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)},",
                                "token_location": {
                                  "start_line_col": [
                                    205,
                                    12
                                  ],
                                  "end_line_col": [
                                    205,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)},",
                                    "token_location": {
                                      "start_line_col": [
                                        205,
                                        19
                                      ],
                                      "end_line_col": [
                                        205,
                                        83
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 28px,",
                                "token_location": {
                                  "start_line_col": [
                                    206,
                                    12
                                  ],
                                  "end_line_col": [
                                    206,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(28.into())",
                                  "raw_value": "28px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 28px,",
                                  "token_location": {
                                    "start_line_col": [
                                      206,
                                      23
                                    ],
                                    "end_line_col": [
                                      206,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    207,
                                    12
                                  ],
                                  "end_line_col": [
                                    207,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(0.0,0.0,0.0,1.0)",
                                    "raw_value": "{Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        207,
                                        19
                                      ],
                                      "end_line_col": [
                                        207,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Top,",
                                "token_location": {
                                  "start_line_col": [
                                    208,
                                    12
                                  ],
                                  "end_line_col": [
                                    208,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Top",
                                  "raw_value": "TextAlignVertical::Top",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Top,",
                                  "token_location": {
                                    "start_line_col": [
                                      208,
                                      28
                                    ],
                                    "end_line_col": [
                                      208,
                                      50
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Left,",
                                "token_location": {
                                  "start_line_col": [
                                    209,
                                    12
                                  ],
                                  "end_line_col": [
                                    209,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Left",
                                  "raw_value": "TextAlignHorizontal::Left",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Left,",
                                  "token_location": {
                                    "start_line_col": [
                                      209,
                                      30
                                    ],
                                    "end_line_col": [
                                      209,
                                      55
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Left,",
                                "token_location": {
                                  "start_line_col": [
                                    210,
                                    12
                                  ],
                                  "end_line_col": [
                                    210,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Left",
                                  "raw_value": "TextAlignHorizontal::Left",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Left,",
                                  "token_location": {
                                    "start_line_col": [
                                      210,
                                      29
                                    ],
                                    "end_line_col": [
                                      210,
                                      54
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "SelectorBlock": [
            {
              "token_value": ".p3",
              "raw_value": ".p3",
              "token_type": "Selector",
              "source_line": "    .p3 {",
              "token_location": {
                "start_line_col": [
                  213,
                  4
                ],
                "end_line_col": [
                  213,
                  7
                ]
              }
            },
            {
              "explicit_type_pascal_identifier": null,
              "elements": [
                {
                  "Setting": [
                    {
                      "token_value": "width",
                      "raw_value": "width",
                      "token_type": "SettingKey",
                      "source_line": "        width: 100%,",
                      "token_location": {
                        "start_line_col": [
                          214,
                          8
                        ],
                        "end_line_col": [
                          214,
                          13
                        ]
                      }
                    },
                    {
                      "LiteralValue": {
                        "token_value": "Size::Percent(100.into())",
                        "raw_value": "100%",
                        "token_type": "LiteralValue",
                        "source_line": "        width: 100%,",
                        "token_location": {
                          "start_line_col": [
                            214,
                            15
                          ],
                          "end_line_col": [
                            214,
                            19
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "Setting": [
                    {
                      "token_value": "style",
                      "raw_value": "style",
                      "token_type": "SettingKey",
                      "source_line": "        style: {",
                      "token_location": {
                        "start_line_col": [
                          215,
                          8
                        ],
                        "end_line_col": [
                          215,
                          13
                        ]
                      }
                    },
                    {
                      "Block": {
                        "explicit_type_pascal_identifier": null,
                        "elements": [
                          {
                            "Setting": [
                              {
                                "token_value": "font",
                                "raw_value": "font",
                                "token_type": "SettingKey",
                                "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)},",
                                "token_location": {
                                  "start_line_col": [
                                    216,
                                    12
                                  ],
                                  "end_line_col": [
                                    216,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)",
                                    "raw_value": "{Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)}",
                                    "token_type": "Expression",
                                    "source_line": "            font: {Font::system(\"Helvetica\", FontStyle::Normal, FontWeight::Normal)},",
                                    "token_location": {
                                      "start_line_col": [
                                        216,
                                        19
                                      ],
                                      "end_line_col": [
                                        216,
                                        83
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "font_size",
                                "raw_value": "font_size",
                                "token_type": "SettingKey",
                                "source_line": "            font_size: 20px,",
                                "token_location": {
                                  "start_line_col": [
                                    217,
                                    12
                                  ],
                                  "end_line_col": [
                                    217,
                                    21
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "Size::Pixels(20.into())",
                                  "raw_value": "20px",
                                  "token_type": "LiteralValue",
                                  "source_line": "            font_size: 20px,",
                                  "token_location": {
                                    "start_line_col": [
                                      217,
                                      23
                                    ],
                                    "end_line_col": [
                                      217,
                                      27
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "fill",
                                "raw_value": "fill",
                                "token_type": "SettingKey",
                                "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                "token_location": {
                                  "start_line_col": [
                                    218,
                                    12
                                  ],
                                  "end_line_col": [
                                    218,
                                    16
                                  ]
                                }
                              },
                              {
                                "Expression": [
                                  {
                                    "token_value": "Color::rgba(0.0,0.0,0.0,1.0)",
                                    "raw_value": "{Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_type": "Expression",
                                    "source_line": "            fill: {Color::rgba(0.0,0.0,0.0,1.0)}",
                                    "token_location": {
                                      "start_line_col": [
                                        218,
                                        19
                                      ],
                                      "end_line_col": [
                                        218,
                                        47
                                      ]
                                    }
                                  },
                                  null
                                ]
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_vertical",
                                "raw_value": "align_vertical",
                                "token_type": "SettingKey",
                                "source_line": "            align_vertical: TextAlignVertical::Top,",
                                "token_location": {
                                  "start_line_col": [
                                    219,
                                    12
                                  ],
                                  "end_line_col": [
                                    219,
                                    26
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignVertical::Top",
                                  "raw_value": "TextAlignVertical::Top",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_vertical: TextAlignVertical::Top,",
                                  "token_location": {
                                    "start_line_col": [
                                      219,
                                      28
                                    ],
                                    "end_line_col": [
                                      219,
                                      50
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_horizontal",
                                "raw_value": "align_horizontal",
                                "token_type": "SettingKey",
                                "source_line": "            align_horizontal: TextAlignHorizontal::Left,",
                                "token_location": {
                                  "start_line_col": [
                                    220,
                                    12
                                  ],
                                  "end_line_col": [
                                    220,
                                    28
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Left",
                                  "raw_value": "TextAlignHorizontal::Left",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_horizontal: TextAlignHorizontal::Left,",
                                  "token_location": {
                                    "start_line_col": [
                                      220,
                                      30
                                    ],
                                    "end_line_col": [
                                      220,
                                      55
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "Setting": [
                              {
                                "token_value": "align_multiline",
                                "raw_value": "align_multiline",
                                "token_type": "SettingKey",
                                "source_line": "            align_multiline: TextAlignHorizontal::Left,",
                                "token_location": {
                                  "start_line_col": [
                                    221,
                                    12
                                  ],
                                  "end_line_col": [
                                    221,
                                    27
                                  ]
                                }
                              },
                              {
                                "LiteralValue": {
                                  "token_value": "TextAlignHorizontal::Left",
                                  "raw_value": "TextAlignHorizontal::Left",
                                  "token_type": "LiteralValue",
                                  "source_line": "            align_multiline: TextAlignHorizontal::Left,",
                                  "token_location": {
                                    "start_line_col": [
                                      221,
                                      29
                                    ],
                                    "end_line_col": [
                                      221,
                                      54
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "handlers": [
        {
          "Handler": [
            {
              "token_value": "did_mount",
              "raw_value": "did_mount",
              "token_type": "EventId",
              "source_line": "    did_mount: self.handle_did_mount,",
              "token_location": {
                "start_line_col": [
                  227,
                  4
                ],
                "end_line_col": [
                  227,
                  13
                ]
              }
            },
            [
              {
                "token_value": "handle_did_mount",
                "raw_value": "self.handle_did_mount",
                "token_type": "Handler",
                "source_line": "    did_mount: self.handle_did_mount,",
                "token_location": {
                  "start_line_col": [
                    227,
                    20
                  ],
                  "end_line_col": [
                    227,
                    36
                  ]
                }
              }
            ]
          ]
        },
        {
          "Handler": [
            {
              "token_value": "will_render",
              "raw_value": "will_render",
              "token_type": "EventId",
              "source_line": "    will_render: self.handle_will_render",
              "token_location": {
                "start_line_col": [
                  228,
                  4
                ],
                "end_line_col": [
                  228,
                  15
                ]
              }
            },
            [
              {
                "token_value": "handle_will_render",
                "raw_value": "self.handle_will_render",
                "token_type": "Handler",
                "source_line": "    will_render: self.handle_will_render",
                "token_location": {
                  "start_line_col": [
                    228,
                    22
                  ],
                  "end_line_col": [
                    228,
                    40
                  ]
                }
              }
            ]
          ]
        }
      ]
    },
    "pax_std::types::ColorVariant": {
      "type_id": "pax_std::types::ColorVariant",
      "type_id_escaped": "pax_stdCOCOtypesCOCOColorVariant",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "ColorVariant",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::Color": {
      "type_id": "pax_std::types::Color",
      "type_id_escaped": "pax_stdCOCOtypesCOCOColor",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "Color",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::TextStyle": {
      "type_id": "pax_std::types::text::TextStyle",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextStyle",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "TextStyle",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::StackerCell": {
      "type_id": "pax_std::types::StackerCell",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStackerCell",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "StackerCell",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::text::Font": {
      "type_id": "pax_std::types::text::Font",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFont",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "Font",
      "module_path": "pax_std::types::text",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::primitives::Frame": {
      "type_id": "pax_std::primitives::Frame",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOFrame",
      "is_main_component": false,
      "is_primitive": true,
      "is_struct_only_component": false,
      "pascal_identifier": "Frame",
      "module_path": "pax_std::primitives",
      "primitive_instance_import_path": "pax_std_primitives::frame::FrameInstance",
      "template": null,
      "settings": null,
      "handlers": null
    },
    "pax_std::types::LinearGradient": {
      "type_id": "pax_std::types::LinearGradient",
      "type_id_escaped": "pax_stdCOCOtypesCOCOLinearGradient",
      "is_main_component": false,
      "is_primitive": false,
      "is_struct_only_component": true,
      "pascal_identifier": "LinearGradient",
      "module_path": "pax_std::types",
      "primitive_instance_import_path": null,
      "template": null,
      "settings": null,
      "handlers": null
    }
  },
  "main_component_type_id": "crate::WebsiteDesktop",
  "expression_specs": null,
  "type_table": {
    "pax_std::types::text::Font": {
      "type_id": "pax_std::types::text::Font",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFont",
      "import_path": "pax_std::types::text::Font",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "System",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::SystemFont"
        },
        {
          "name": "Web",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::WebFont"
        },
        {
          "name": "Local",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::LocalFont"
        }
      ]
    },
    "pax_std::primitives::Image": {
      "type_id": "pax_std::primitives::Image",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOImage",
      "import_path": "pax_std::primitives::Image",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "path",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        }
      ]
    },
    "f64": {
      "type_id": "f64",
      "type_id_escaped": "f64",
      "import_path": "f64",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "u64": {
      "type_id": "u64",
      "type_id_escaped": "u64",
      "import_path": "u64",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::GradientStop": {
      "type_id": "pax_std::types::GradientStop",
      "type_id_escaped": "pax_stdCOCOtypesCOCOGradientStop",
      "import_path": "pax_std::types::GradientStop",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "position",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::Size"
        },
        {
          "name": "color",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Color"
        }
      ]
    },
    "pax_std::types::LinearGradient": {
      "type_id": "pax_std::types::LinearGradient",
      "type_id_escaped": "pax_stdCOCOtypesCOCOLinearGradient",
      "import_path": "pax_std::types::LinearGradient",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "stops",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "std::vec::Vec<{PREFIX}pax_std::types::GradientStop>"
        }
      ]
    },
    "pax_std::types::Stroke": {
      "type_id": "pax_std::types::Stroke",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStroke",
      "import_path": "pax_std::types::Stroke",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "color",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Color"
        },
        {
          "name": "width",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::SizePixels"
        }
      ]
    },
    "i128": {
      "type_id": "i128",
      "type_id_escaped": "i128",
      "import_path": "i128",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::RadialGradient": {
      "type_id": "pax_std::types::RadialGradient",
      "type_id_escaped": "pax_stdCOCOtypesCOCORadialGradient",
      "import_path": "pax_std::types::RadialGradient",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "radius",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "stops",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "std::vec::Vec<{PREFIX}pax_std::types::GradientStop>"
        }
      ]
    },
    "i32": {
      "type_id": "i32",
      "type_id_escaped": "i32",
      "import_path": "i32",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "i16": {
      "type_id": "i16",
      "type_id_escaped": "i16",
      "import_path": "i16",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::primitives::Scroller": {
      "type_id": "pax_std::primitives::Scroller",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOScroller",
      "import_path": "pax_std::primitives::Scroller",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "size_inner_pane_x",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::Size"
        },
        {
          "name": "size_inner_pane_y",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::Size"
        },
        {
          "name": "scroll_enabled_x",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "bool"
        },
        {
          "name": "scroll_enabled_y",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "bool"
        }
      ]
    },
    "pax_std::types::text::SystemFont": {
      "type_id": "pax_std::types::text::SystemFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOSystemFont",
      "import_path": "pax_std::types::text::SystemFont",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "family",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "style",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontStyle"
        },
        {
          "name": "weight",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontWeight"
        }
      ]
    },
    "u32": {
      "type_id": "u32",
      "type_id_escaped": "u32",
      "import_path": "u32",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::ColorVariant": {
      "type_id": "pax_std::types::ColorVariant",
      "type_id_escaped": "pax_stdCOCOtypesCOCOColorVariant",
      "import_path": "pax_std::types::ColorVariant",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_lang::api::SizePixels": {
      "type_id": "pax_lang::api::SizePixels",
      "type_id_escaped": "pax_langCOCOapiCOCOSizePixels",
      "import_path": "pax_lang::api::SizePixels",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "bool": {
      "type_id": "bool",
      "type_id_escaped": "bool",
      "import_path": "bool",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "i64": {
      "type_id": "i64",
      "type_id_escaped": "i64",
      "import_path": "i64",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "std::vec::Vec<{PREFIX}std::option::Option<{PREFIX}pax_lang::api::Size>>": {
      "type_id": "std::vec::Vec<{PREFIX}std::option::Option<{PREFIX}pax_lang::api::Size>>",
      "type_id_escaped": "stdCOCOvecCOCOVecLABR{PREFIX}stdCOCOoptionCOCOOptionLABR{PREFIX}pax_langCOCOapiCOCOSizeRABRRABR",
      "import_path": "std::vec::Vec",
      "inner_iterable_type_id": "std::option::Option<{PREFIX}pax_lang::api::Size>",
      "property_definitions": []
    },
    "std::vec::Vec<{PREFIX}pax_std::types::StackerCell>": {
      "type_id": "std::vec::Vec<{PREFIX}pax_std::types::StackerCell>",
      "type_id_escaped": "stdCOCOvecCOCOVecLABR{PREFIX}pax_stdCOCOtypesCOCOStackerCellRABR",
      "import_path": "std::vec::Vec",
      "inner_iterable_type_id": "pax_std::types::StackerCell",
      "property_definitions": []
    },
    "pax_std::types::text::WebFont": {
      "type_id": "pax_std::types::text::WebFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOWebFont",
      "import_path": "pax_std::types::text::WebFont",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "family",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "url",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "style",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontStyle"
        },
        {
          "name": "weight",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontWeight"
        }
      ]
    },
    "pax_std::types::text::TextAlignVertical": {
      "type_id": "pax_std::types::text::TextAlignVertical",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextAlignVertical",
      "import_path": "pax_std::types::text::TextAlignVertical",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::text::TextStyle": {
      "type_id": "pax_std::types::text::TextStyle",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextStyle",
      "import_path": "pax_std::types::text::TextStyle",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "font",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::Font"
        },
        {
          "name": "font_size",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::SizePixels"
        },
        {
          "name": "fill",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Color"
        },
        {
          "name": "underline",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "bool"
        },
        {
          "name": "align_multiline",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::TextAlignHorizontal"
        },
        {
          "name": "align_vertical",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::TextAlignVertical"
        },
        {
          "name": "align_horizontal",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::TextAlignHorizontal"
        }
      ]
    },
    "String": {
      "type_id": "String",
      "type_id_escaped": "String",
      "import_path": "String",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "std::option::Option<{PREFIX}pax_lang::api::Size>": {
      "type_id": "std::option::Option<{PREFIX}pax_lang::api::Size>",
      "type_id_escaped": "stdCOCOoptionCOCOOptionLABR{PREFIX}pax_langCOCOapiCOCOSizeRABR",
      "import_path": "std::option::Option<{PREFIX}pax_lang::api::Size>",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::Fill": {
      "type_id": "pax_std::types::Fill",
      "type_id_escaped": "pax_stdCOCOtypesCOCOFill",
      "import_path": "pax_std::types::Fill",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "Solid",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Color"
        },
        {
          "name": "LinearGradient",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::LinearGradient"
        },
        {
          "name": "RadialGradient",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::RadialGradient"
        }
      ]
    },
    "pax_std::types::text::FontWeight": {
      "type_id": "pax_std::types::text::FontWeight",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFontWeight",
      "import_path": "pax_std::types::text::FontWeight",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::primitives::Text": {
      "type_id": "pax_std::primitives::Text",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOText",
      "import_path": "pax_std::primitives::Text",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "text",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "style",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::TextStyle"
        },
        {
          "name": "style_link",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::TextStyle"
        }
      ]
    },
    "pax_std::primitives::Rectangle": {
      "type_id": "pax_std::primitives::Rectangle",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCORectangle",
      "import_path": "pax_std::primitives::Rectangle",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "stroke",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Stroke"
        },
        {
          "name": "fill",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::Fill"
        },
        {
          "name": "corner_radii",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::RectangleCornerRadii"
        }
      ]
    },
    "pax_std::types::text::FontStyle": {
      "type_id": "pax_std::types::text::FontStyle",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOFontStyle",
      "import_path": "pax_std::types::text::FontStyle",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "i8": {
      "type_id": "i8",
      "type_id_escaped": "i8",
      "import_path": "i8",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::text::LocalFont": {
      "type_id": "pax_std::types::text::LocalFont",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOLocalFont",
      "import_path": "pax_std::types::text::LocalFont",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "family",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "path",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::StringBox"
        },
        {
          "name": "style",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontStyle"
        },
        {
          "name": "weight",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::text::FontWeight"
        }
      ]
    },
    "pax_lang::api::Numeric": {
      "type_id": "pax_lang::api::Numeric",
      "type_id_escaped": "pax_langCOCOapiCOCONumeric",
      "import_path": "pax_lang::api::Numeric",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::primitives::Frame": {
      "type_id": "pax_std::primitives::Frame",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOFrame",
      "import_path": "pax_std::primitives::Frame",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "u8": {
      "type_id": "u8",
      "type_id_escaped": "u8",
      "import_path": "u8",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "isize": {
      "type_id": "isize",
      "type_id_escaped": "isize",
      "import_path": "isize",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::text::TextAlignHorizontal": {
      "type_id": "pax_std::types::text::TextAlignHorizontal",
      "type_id_escaped": "pax_stdCOCOtypesCOCOtextCOCOTextAlignHorizontal",
      "import_path": "pax_std::types::text::TextAlignHorizontal",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "crate::WebsiteDesktop": {
      "type_id": "crate::WebsiteDesktop",
      "type_id_escaped": "crateCOCOWebsiteDesktop",
      "import_path": "crate::WebsiteDesktop",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "ticks",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "usize"
        }
      ]
    },
    "u16": {
      "type_id": "u16",
      "type_id_escaped": "u16",
      "import_path": "u16",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "u128": {
      "type_id": "u128",
      "type_id_escaped": "u128",
      "import_path": "u128",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::StackerDirection": {
      "type_id": "pax_std::types::StackerDirection",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStackerDirection",
      "import_path": "pax_std::types::StackerDirection",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::primitives::Group": {
      "type_id": "pax_std::primitives::Group",
      "type_id_escaped": "pax_stdCOCOprimitivesCOCOGroup",
      "import_path": "pax_std::primitives::Group",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::StackerCell": {
      "type_id": "pax_std::types::StackerCell",
      "type_id_escaped": "pax_stdCOCOtypesCOCOStackerCell",
      "import_path": "pax_std::types::StackerCell",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "x_px",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "y_px",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "width_px",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "height_px",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        }
      ]
    },
    "std::vec::Vec<{PREFIX}pax_std::types::GradientStop>": {
      "type_id": "std::vec::Vec<{PREFIX}pax_std::types::GradientStop>",
      "type_id_escaped": "stdCOCOvecCOCOVecLABR{PREFIX}pax_stdCOCOtypesCOCOGradientStopRABR",
      "import_path": "std::vec::Vec",
      "inner_iterable_type_id": "pax_std::types::GradientStop",
      "property_definitions": []
    },
    "pax_lang::api::StringBox": {
      "type_id": "pax_lang::api::StringBox",
      "type_id_escaped": "pax_langCOCOapiCOCOStringBox",
      "import_path": "pax_lang::api::StringBox",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "usize": {
      "type_id": "usize",
      "type_id_escaped": "usize",
      "import_path": "usize",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::stacker::Stacker": {
      "type_id": "pax_std::stacker::Stacker",
      "type_id_escaped": "pax_stdCOCOstackerCOCOStacker",
      "import_path": "pax_std::stacker::Stacker",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "cells",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::Numeric"
        },
        {
          "name": "direction",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::StackerDirection"
        },
        {
          "name": "_cell_specs",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "std::vec::Vec<{PREFIX}pax_std::types::StackerCell>"
        },
        {
          "name": "gutter",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_lang::api::Size"
        },
        {
          "name": "sizes",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "std::vec::Vec<{PREFIX}std::option::Option<{PREFIX}pax_lang::api::Size>>"
        }
      ]
    },
    "pax_lang::api::Size": {
      "type_id": "pax_lang::api::Size",
      "type_id_escaped": "pax_langCOCOapiCOCOSize",
      "import_path": "pax_lang::api::Size",
      "inner_iterable_type_id": null,
      "property_definitions": []
    },
    "pax_std::types::RectangleCornerRadii": {
      "type_id": "pax_std::types::RectangleCornerRadii",
      "type_id_escaped": "pax_stdCOCOtypesCOCORectangleCornerRadii",
      "import_path": "pax_std::types::RectangleCornerRadii",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "top_left",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "top_right",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "bottom_right",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        },
        {
          "name": "bottom_left",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "f64"
        }
      ]
    },
    "pax_std::types::Color": {
      "type_id": "pax_std::types::Color",
      "type_id_escaped": "pax_stdCOCOtypesCOCOColor",
      "import_path": "pax_std::types::Color",
      "inner_iterable_type_id": null,
      "property_definitions": [
        {
          "name": "color_variant",
          "flags": {
            "is_binding_repeat_i": false,
            "is_binding_repeat_elem": false,
            "is_repeat_source_range": false,
            "is_repeat_source_iterable": false,
            "is_property_wrapped": false
          },
          "type_id": "pax_std::types::ColorVariant"
        }
      ]
    }
  },
  "import_paths": [
    "pax_std::types::StackerCell",
    "pax_lang::api::Numeric",
    "usize",
    "std::option::Option",
    "pax_std::primitives::Frame",
    "pax_std::types::ColorVariant",
    "pax_std::primitives::Scroller",
    "pax_std::types::text::FontWeight",
    "pax_std::primitives::Image",
    "pax_std::types::text::Font",
    "pax_std::types::Fill",
    "pax_std::primitives::Group",
    "pax_lang::api::StringBox",
    "pax_std::types::text::TextStyle",
    "pax_std::types::RectangleCornerRadii",
    "pax_std::types::text::WebFont",
    "pax_lang::api::SizePixels",
    "pax_lang::api::Transform2D",
    "f64",
    "pax_std::types::Stroke",
    "pax_lang::api::Rotation",
    "pax_std::primitives::Text",
    "pax_std::types::GradientStop",
    "bool",
    "pax_std::types::text::SystemFont",
    "pax_lang::api::Size",
    "std::vec::Vec",
    "pax_std::types::RadialGradient",
    "pax_std::types::text::TextAlignVertical",
    "pax_std::types::text::LocalFont",
    "pax_std::types::StackerDirection",
    "pax_std::primitives::Rectangle",
    "pax_std::types::text::TextAlignHorizontal",
    "crate::WebsiteDesktop",
    "pax_std::types::text::FontStyle",
    "pax_std::types::Color",
    "pax_std::stacker::Stacker",
    "pax_std::types::LinearGradient"
  ]
}
