
{% if is_primitive %}
{{ primitive_instance_import_path }}::instantiate(
{% else %}
instantiate_{{ snake_case_component_id }}(
{% endif %} InstantiationArgs {
    properties: PropertiesCoproduct::{{ properties_coproduct_variant }}{% if properties_coproduct_variant != "None" %}( {{component_properties_struct}} {
        {% for property in properties %}
            {{ property.0 }}: Box::new( {{ property.1 }} ),
        {% endfor %}
    }){% endif %},
    handler_registry: Some(Rc::new(RefCell::new(
                               HandlerRegistry {
                                   click_handlers: vec![
                                       |stack_frame, args|{
                                           pax_runtime_api::log(format!("click: x:{}, y:{}",args.x, args.y).as_str());
                                       }
                                   ],
                                   will_render_handlers: vec![],
                                   scroll_handlers: vec![
                                       |stack_frame, args|{
                                           pax_runtime_api::log(format!("scroll: delta_x:{}, delta_y:{}", args.delta_x, args.delta_y).as_str());
                                       }
                                   ],
                               }
                           ))),
    instance_registry: Rc::clone(&instance_registry),
    transform: Rc::new(RefCell::new({{ transform_ril }})),
    size: Some(Rc::new(RefCell::new(
        [Box::new({{size_ril[0]}}),Box::new({{size_ril[1]}})]
    ))),
    children: Some(Rc::new(RefCell::new(vec![
        {% for child_literal in children_literal %}
            {{ child_literal }},
        {% endfor %}
    ]))),
    component_template: None,
    scroller_args: None,
    slot_index: {{slot_index_literal}},
    repeat_source_expression: {{repeat_source_expression_literal}},
    conditional_boolean_expression: {{conditional_boolean_expression_literal}},
    compute_properties_fn: None,
})

